/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "(pages-dir-node)/./src/abis/DAIToken.json":
/*!********************************!*\
  !*** ./src/abis/DAIToken.json ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]}');

/***/ }),

/***/ "(pages-dir-node)/./src/abis/LendingHelper.json":
/*!*************************************!*\
  !*** ./src/abis/LendingHelper.json ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountInUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getTokensPerUSDAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]}');

/***/ }),

/***/ "(pages-dir-node)/./src/abis/LendingPool.json":
/*!***********************************!*\
  !*** ./src/abis/LendingPool.json ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAccountData","outputs":[{"internalType":"uint256","name":"collateralValue1e18","type":"uint256"},{"internalType":"uint256","name":"debtValue1e18","type":"uint256"},{"internalType":"uint256","name":"healthFactor1e18","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lend","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getLenderAssets","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"lentQty","type":"uint256"},{"internalType":"uint256","name":"lentApy","type":"uint256"}],"internalType":"struct LendingPool.LenderAsset[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getBorrowerAssets","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"borrowQty","type":"uint256"},{"internalType":"uint256","name":"borrowApy","type":"uint256"}],"internalType":"struct LendingPool.BorrowerAsset[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAssetsToBorrow","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"borrowQty","type":"uint256"},{"internalType":"uint256","name":"borrowApy","type":"uint256"}],"internalType":"struct LendingPool.BorrowerAsset[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"assetType","type":"uint256"}],"name":"getUserTotalAvailableBalanceInUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getUserReserve","outputs":[{"components":[{"components":[{"internalType":"uint128","name":"principal","type":"uint128"},{"internalType":"uint128","name":"index","type":"uint128"}],"internalType":"struct LendingPool.UserReserveData","name":"supply","type":"tuple"},{"components":[{"internalType":"uint128","name":"principal","type":"uint128"},{"internalType":"uint128","name":"index","type":"uint128"}],"internalType":"struct LendingPool.UserReserveData","name":"borrow","type":"tuple"}],"internalType":"struct LendingPool.UserReserve","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"accruePublic","outputs":[],"stateMutability":"nonpayable","type":"function"}]}');

/***/ }),

/***/ "(pages-dir-node)/./src/abis/index.js":
/*!***************************!*\
  !*** ./src/abis/index.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst TokenABI = __webpack_require__(/*! ./DAIToken.json */ \"(pages-dir-node)/./src/abis/DAIToken.json\");\nconst LendingPoolABI = __webpack_require__(/*! ./LendingPool.json */ \"(pages-dir-node)/./src/abis/LendingPool.json\");\nconst LendingHelperABI = __webpack_require__(/*! ./LendingHelper.json */ \"(pages-dir-node)/./src/abis/LendingHelper.json\");\nmodule.exports = {\n    TokenABI,\n    LendingPoolABI,\n    LendingHelperABI\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9hYmlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxXQUFXQyxtQkFBT0EsQ0FBQyxrRUFBaUI7QUFDMUMsTUFBTUMsaUJBQWlCRCxtQkFBT0EsQ0FBQyx3RUFBb0I7QUFDbkQsTUFBTUUsbUJBQW1CRixtQkFBT0EsQ0FBQyw0RUFBc0I7QUFFdkRHLE9BQU9DLE9BQU8sR0FBRztJQUNmTDtJQUNBRTtJQUNBQztBQUNGIiwic291cmNlcyI6WyJEOlxcRG9fYW4yXFxsZW5kaHViX3YyXFxsZW5kaHViLWZyb250ZW5kLW5leHRqc1xcc3JjXFxhYmlzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBUb2tlbkFCSSA9IHJlcXVpcmUoJy4vREFJVG9rZW4uanNvbicpO1xyXG5jb25zdCBMZW5kaW5nUG9vbEFCSSA9IHJlcXVpcmUoJy4vTGVuZGluZ1Bvb2wuanNvbicpO1xyXG5jb25zdCBMZW5kaW5nSGVscGVyQUJJID0gcmVxdWlyZSgnLi9MZW5kaW5nSGVscGVyLmpzb24nKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIFRva2VuQUJJLFxyXG4gIExlbmRpbmdQb29sQUJJLFxyXG4gIExlbmRpbmdIZWxwZXJBQkksXHJcbn07XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbIlRva2VuQUJJIiwicmVxdWlyZSIsIkxlbmRpbmdQb29sQUJJIiwiTGVuZGluZ0hlbHBlckFCSSIsIm1vZHVsZSIsImV4cG9ydHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/abis/index.js\n");

/***/ }),

/***/ "(pages-dir-node)/./src/addresses.js":
/*!**************************!*\
  !*** ./src/addresses.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DAIAddress: () => (/* binding */ DAIAddress),\n/* harmony export */   ETHAddress: () => (/* binding */ ETHAddress),\n/* harmony export */   InterestRateModelAddress: () => (/* binding */ InterestRateModelAddress),\n/* harmony export */   LINKAddress: () => (/* binding */ LINKAddress),\n/* harmony export */   LendingHelperAddress: () => (/* binding */ LendingHelperAddress),\n/* harmony export */   LendingPoolAddress: () => (/* binding */ LendingPoolAddress),\n/* harmony export */   MockV3AggregatorAddress: () => (/* binding */ MockV3AggregatorAddress),\n/* harmony export */   PriceOracleAddress: () => (/* binding */ PriceOracleAddress),\n/* harmony export */   USDCAddress: () => (/* binding */ USDCAddress),\n/* harmony export */   WETHAddress: () => (/* binding */ WETHAddress)\n/* harmony export */ });\n// Contract addresses (auto-updated by deploy script)\nconst ETHAddress = \"0x0000000000000000000000000000000000000000\";\nconst LendingPoolAddress = \"0x6A390857c83B00c915101ba92e85390F3D092Da4\";\nconst InterestRateModelAddress = \"0x886B0BCCAa9787e6253A34FCbb0B0C41515fC1ad\";\nconst LendingHelperAddress = \"0x0000000000000000000000000000000000000000\"; // Not deployed\nconst WETHAddress = \"0x5dbaA510902A078Fb07D828a779b4a1CCD931FCe\";\nconst DAIAddress = \"0xA9333DE801626733a8C4996F0A55C279817c1481\";\nconst USDCAddress = \"0xE69772C639d168EF8e252C17EB591E43E5B0D914\";\nconst LINKAddress = \"0xa24b76c2BE9B2AA65048Acc1dAF7be920d2AEf29\";\nconst PriceOracleAddress = \"0xd49Ffcb8507478C3b35886a0A6F7a0C75eC730e0\";\nconst MockV3AggregatorAddress = \"0x3814c61Cdd91708fc8391AF266Bf1e28CB2a43a5\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9hZGRyZXNzZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFEQUFxRDtBQUM5QyxNQUFNQSxhQUFhLDZDQUE2QztBQUNoRSxNQUFNQyxxQkFBcUIsNkNBQTZDO0FBQ3hFLE1BQU1DLDJCQUEyQiw2Q0FBNkM7QUFDOUUsTUFBTUMsdUJBQXVCLDZDQUE2QyxDQUFDLGVBQWU7QUFDMUYsTUFBTUMsY0FBYyw2Q0FBNkM7QUFDakUsTUFBTUMsYUFBYSw2Q0FBNkM7QUFDaEUsTUFBTUMsY0FBYyw2Q0FBNkM7QUFDakUsTUFBTUMsY0FBYyw2Q0FBNkM7QUFDakUsTUFBTUMscUJBQXFCLDZDQUE2QztBQUN4RSxNQUFNQywwQkFBMEIsNkNBQTZDIiwic291cmNlcyI6WyJEOlxcRG9fYW4yXFxsZW5kaHViX3YyXFxsZW5kaHViLWZyb250ZW5kLW5leHRqc1xcc3JjXFxhZGRyZXNzZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29udHJhY3QgYWRkcmVzc2VzIChhdXRvLXVwZGF0ZWQgYnkgZGVwbG95IHNjcmlwdClcbmV4cG9ydCBjb25zdCBFVEhBZGRyZXNzID0gXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIjtcbmV4cG9ydCBjb25zdCBMZW5kaW5nUG9vbEFkZHJlc3MgPSBcIjB4NkEzOTA4NTdjODNCMDBjOTE1MTAxYmE5MmU4NTM5MEYzRDA5MkRhNFwiO1xuZXhwb3J0IGNvbnN0IEludGVyZXN0UmF0ZU1vZGVsQWRkcmVzcyA9IFwiMHg4ODZCMEJDQ0FhOTc4N2U2MjUzQTM0RkNiYjBCMEM0MTUxNWZDMWFkXCI7XG5leHBvcnQgY29uc3QgTGVuZGluZ0hlbHBlckFkZHJlc3MgPSBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiOyAvLyBOb3QgZGVwbG95ZWRcbmV4cG9ydCBjb25zdCBXRVRIQWRkcmVzcyA9IFwiMHg1ZGJhQTUxMDkwMkEwNzhGYjA3RDgyOGE3NzliNGExQ0NEOTMxRkNlXCI7XG5leHBvcnQgY29uc3QgREFJQWRkcmVzcyA9IFwiMHhBOTMzM0RFODAxNjI2NzMzYThDNDk5NkYwQTU1QzI3OTgxN2MxNDgxXCI7XG5leHBvcnQgY29uc3QgVVNEQ0FkZHJlc3MgPSBcIjB4RTY5NzcyQzYzOWQxNjhFRjhlMjUyQzE3RUI1OTFFNDNFNUIwRDkxNFwiO1xuZXhwb3J0IGNvbnN0IExJTktBZGRyZXNzID0gXCIweGEyNGI3NmMyQkU5QjJBQTY1MDQ4QWNjMWRBRjdiZTkyMGQyQUVmMjlcIjtcbmV4cG9ydCBjb25zdCBQcmljZU9yYWNsZUFkZHJlc3MgPSBcIjB4ZDQ5RmZjYjg1MDc0NzhDM2IzNTg4NmEwQTZGN2EwQzc1ZUM3MzBlMFwiO1xuZXhwb3J0IGNvbnN0IE1vY2tWM0FnZ3JlZ2F0b3JBZGRyZXNzID0gXCIweDM4MTRjNjFDZGQ5MTcwOGZjODM5MUFGMjY2QmYxZTI4Q0IyYTQzYTVcIjtcbiJdLCJuYW1lcyI6WyJFVEhBZGRyZXNzIiwiTGVuZGluZ1Bvb2xBZGRyZXNzIiwiSW50ZXJlc3RSYXRlTW9kZWxBZGRyZXNzIiwiTGVuZGluZ0hlbHBlckFkZHJlc3MiLCJXRVRIQWRkcmVzcyIsIkRBSUFkZHJlc3MiLCJVU0RDQWRkcmVzcyIsIkxJTktBZGRyZXNzIiwiUHJpY2VPcmFjbGVBZGRyZXNzIiwiTW9ja1YzQWdncmVnYXRvckFkZHJlc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/addresses.js\n");

/***/ }),

/***/ "(pages-dir-node)/./src/config/abis.ts":
/*!****************************!*\
  !*** ./src/config/abis.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERC20_ABI: () => (/* binding */ ERC20_ABI),\n/* harmony export */   INTEREST_RATE_MODEL_ABI: () => (/* binding */ INTEREST_RATE_MODEL_ABI),\n/* harmony export */   ORACLE_ABI: () => (/* binding */ ORACLE_ABI),\n/* harmony export */   POOL_ABI: () => (/* binding */ POOL_ABI)\n/* harmony export */ });\n// Contract ABIs for LendHub v2\nconst POOL_ABI = [\n    // View functions\n    'function getAccountData(address user) external view returns (uint256 collateralValue1e18, uint256 debtValue1e18, uint256 healthFactor1e18)',\n    'function getReserveData(address asset) external view returns (uint256 reserveCash, uint256 totalDebt, uint256 utilizationWad, uint256 liquidityRateRayPerSec, uint256 variableBorrowRateRayPerSec, uint256 liquidityIndexRay, uint256 variableBorrowIndexRay, uint8 decimals, bool isBorrowable, uint16 liquidationThreshold, uint16 ltv, uint16 reserveFactor, uint16 liquidationBonus, uint16 closeFactor)',\n    'function getUserReserveData(address user, address asset) external view returns (uint256 supplyBalance1e18, uint256 borrowBalance1e18, bool isCollateral)',\n    'function reserves(address asset) external view returns (uint256 reserveCash, uint256 totalDebt, uint256 utilizationWad, uint256 liquidityRateRayPerSec, uint256 variableBorrowRateRayPerSec, uint256 liquidityIndexRay, uint256 variableBorrowIndexRay, uint8 decimals, bool isBorrowable, uint16 liquidationThreshold, uint16 ltv, uint16 reserveFactor, uint16 liquidationBonus, uint16 closeFactor)',\n    'function userReserves(address user, address asset) external view returns (uint256 supplyBalance1e18, uint256 borrowBalance1e18, bool isCollateral)',\n    // Write functions\n    'function lend(address asset, uint256 amount) external',\n    'function withdraw(address asset, uint256 amount) external',\n    'function borrow(address asset, uint256 amount) external',\n    'function repay(address asset, uint256 amount, address onBehalfOf) external returns (uint256)',\n    'function liquidationCall(address debtAsset, address collateralAsset, address user, uint256 debtAmount) external',\n    'function accruePublic(address asset) external',\n    // Events\n    'event ReserveDataUpdated(address indexed asset, uint256 utilizationWad, uint256 liquidityRateRayPerSec, uint256 variableBorrowRateRayPerSec, uint256 liquidityIndexRay, uint256 variableBorrowIndexRay)',\n    'event Supplied(address indexed user, address indexed asset, uint256 amount)',\n    'event Withdrawn(address indexed user, address indexed asset, uint256 amount)',\n    'event Borrowed(address indexed user, address indexed asset, uint256 amount)',\n    'event Repaid(address indexed user, address indexed onBehalfOf, address indexed asset, uint256 amount)',\n    'event Liquidated(address indexed liquidator, address indexed user, address indexed debtAsset, address indexed collateralAsset, uint256 debtAmount, uint256 collateralAmount)'\n];\nconst ERC20_ABI = [\n    // View functions\n    'function balanceOf(address owner) external view returns (uint256)',\n    'function allowance(address owner, address spender) external view returns (uint256)',\n    'function decimals() external view returns (uint8)',\n    'function symbol() external view returns (string)',\n    'function name() external view returns (string)',\n    'function totalSupply() external view returns (uint256)',\n    // Write functions\n    'function approve(address spender, uint256 amount) external returns (bool)',\n    'function transfer(address to, uint256 amount) external returns (bool)',\n    'function transferFrom(address from, address to, uint256 amount) external returns (bool)',\n    // Events\n    'event Transfer(address indexed from, address indexed to, uint256 value)',\n    'event Approval(address indexed owner, address indexed spender, uint256 value)'\n];\nconst ORACLE_ABI = [\n    // View functions\n    'function getAssetPrice1e18(address asset) external view returns (uint256)',\n    'function getAssetPrice(address asset) external view returns (uint256)',\n    // Write functions (for testing)\n    'function setAssetPrice(address asset, uint256 price) external',\n    // Events\n    'event AssetPriceUpdated(address indexed asset, uint256 oldPrice, uint256 newPrice)'\n];\n// Interest Rate Model ABI (if needed)\nconst INTEREST_RATE_MODEL_ABI = [\n    'function getBorrowRate(uint256 cash, uint256 borrows, uint256 reserves) external view returns (uint256)',\n    'function getSupplyRate(uint256 cash, uint256 borrows, uint256 reserves, uint256 reserveFactorMantissa) external view returns (uint256)'\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9jb25maWcvYWJpcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsK0JBQStCO0FBRXhCLE1BQU1BLFdBQVc7SUFDdEIsaUJBQWlCO0lBQ2pCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFFQSxrQkFBa0I7SUFDbEI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBRUEsU0FBUztJQUNUO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNELENBQVU7QUFFSixNQUFNQyxZQUFZO0lBQ3ZCLGlCQUFpQjtJQUNqQjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFFQSxrQkFBa0I7SUFDbEI7SUFDQTtJQUNBO0lBRUEsU0FBUztJQUNUO0lBQ0E7Q0FDRCxDQUFVO0FBRUosTUFBTUMsYUFBYTtJQUN4QixpQkFBaUI7SUFDakI7SUFDQTtJQUVBLGdDQUFnQztJQUNoQztJQUVBLFNBQVM7SUFDVDtDQUNELENBQVU7QUFFWCxzQ0FBc0M7QUFDL0IsTUFBTUMsMEJBQTBCO0lBQ3JDO0lBQ0E7Q0FDRCxDQUFVIiwic291cmNlcyI6WyJEOlxcRG9fYW4yXFxsZW5kaHViX3YyXFxsZW5kaHViLWZyb250ZW5kLW5leHRqc1xcc3JjXFxjb25maWdcXGFiaXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29udHJhY3QgQUJJcyBmb3IgTGVuZEh1YiB2MlxyXG5cclxuZXhwb3J0IGNvbnN0IFBPT0xfQUJJID0gW1xyXG4gIC8vIFZpZXcgZnVuY3Rpb25zXHJcbiAgJ2Z1bmN0aW9uIGdldEFjY291bnREYXRhKGFkZHJlc3MgdXNlcikgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2IGNvbGxhdGVyYWxWYWx1ZTFlMTgsIHVpbnQyNTYgZGVidFZhbHVlMWUxOCwgdWludDI1NiBoZWFsdGhGYWN0b3IxZTE4KScsXHJcbiAgJ2Z1bmN0aW9uIGdldFJlc2VydmVEYXRhKGFkZHJlc3MgYXNzZXQpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiByZXNlcnZlQ2FzaCwgdWludDI1NiB0b3RhbERlYnQsIHVpbnQyNTYgdXRpbGl6YXRpb25XYWQsIHVpbnQyNTYgbGlxdWlkaXR5UmF0ZVJheVBlclNlYywgdWludDI1NiB2YXJpYWJsZUJvcnJvd1JhdGVSYXlQZXJTZWMsIHVpbnQyNTYgbGlxdWlkaXR5SW5kZXhSYXksIHVpbnQyNTYgdmFyaWFibGVCb3Jyb3dJbmRleFJheSwgdWludDggZGVjaW1hbHMsIGJvb2wgaXNCb3Jyb3dhYmxlLCB1aW50MTYgbGlxdWlkYXRpb25UaHJlc2hvbGQsIHVpbnQxNiBsdHYsIHVpbnQxNiByZXNlcnZlRmFjdG9yLCB1aW50MTYgbGlxdWlkYXRpb25Cb251cywgdWludDE2IGNsb3NlRmFjdG9yKScsXHJcbiAgJ2Z1bmN0aW9uIGdldFVzZXJSZXNlcnZlRGF0YShhZGRyZXNzIHVzZXIsIGFkZHJlc3MgYXNzZXQpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiBzdXBwbHlCYWxhbmNlMWUxOCwgdWludDI1NiBib3Jyb3dCYWxhbmNlMWUxOCwgYm9vbCBpc0NvbGxhdGVyYWwpJyxcclxuICAnZnVuY3Rpb24gcmVzZXJ2ZXMoYWRkcmVzcyBhc3NldCkgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2IHJlc2VydmVDYXNoLCB1aW50MjU2IHRvdGFsRGVidCwgdWludDI1NiB1dGlsaXphdGlvbldhZCwgdWludDI1NiBsaXF1aWRpdHlSYXRlUmF5UGVyU2VjLCB1aW50MjU2IHZhcmlhYmxlQm9ycm93UmF0ZVJheVBlclNlYywgdWludDI1NiBsaXF1aWRpdHlJbmRleFJheSwgdWludDI1NiB2YXJpYWJsZUJvcnJvd0luZGV4UmF5LCB1aW50OCBkZWNpbWFscywgYm9vbCBpc0JvcnJvd2FibGUsIHVpbnQxNiBsaXF1aWRhdGlvblRocmVzaG9sZCwgdWludDE2IGx0diwgdWludDE2IHJlc2VydmVGYWN0b3IsIHVpbnQxNiBsaXF1aWRhdGlvbkJvbnVzLCB1aW50MTYgY2xvc2VGYWN0b3IpJyxcclxuICAnZnVuY3Rpb24gdXNlclJlc2VydmVzKGFkZHJlc3MgdXNlciwgYWRkcmVzcyBhc3NldCkgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2IHN1cHBseUJhbGFuY2UxZTE4LCB1aW50MjU2IGJvcnJvd0JhbGFuY2UxZTE4LCBib29sIGlzQ29sbGF0ZXJhbCknLFxyXG4gIFxyXG4gIC8vIFdyaXRlIGZ1bmN0aW9uc1xyXG4gICdmdW5jdGlvbiBsZW5kKGFkZHJlc3MgYXNzZXQsIHVpbnQyNTYgYW1vdW50KSBleHRlcm5hbCcsXHJcbiAgJ2Z1bmN0aW9uIHdpdGhkcmF3KGFkZHJlc3MgYXNzZXQsIHVpbnQyNTYgYW1vdW50KSBleHRlcm5hbCcsXHJcbiAgJ2Z1bmN0aW9uIGJvcnJvdyhhZGRyZXNzIGFzc2V0LCB1aW50MjU2IGFtb3VudCkgZXh0ZXJuYWwnLFxyXG4gICdmdW5jdGlvbiByZXBheShhZGRyZXNzIGFzc2V0LCB1aW50MjU2IGFtb3VudCwgYWRkcmVzcyBvbkJlaGFsZk9mKSBleHRlcm5hbCByZXR1cm5zICh1aW50MjU2KScsXHJcbiAgJ2Z1bmN0aW9uIGxpcXVpZGF0aW9uQ2FsbChhZGRyZXNzIGRlYnRBc3NldCwgYWRkcmVzcyBjb2xsYXRlcmFsQXNzZXQsIGFkZHJlc3MgdXNlciwgdWludDI1NiBkZWJ0QW1vdW50KSBleHRlcm5hbCcsXHJcbiAgJ2Z1bmN0aW9uIGFjY3J1ZVB1YmxpYyhhZGRyZXNzIGFzc2V0KSBleHRlcm5hbCcsXHJcbiAgXHJcbiAgLy8gRXZlbnRzXHJcbiAgJ2V2ZW50IFJlc2VydmVEYXRhVXBkYXRlZChhZGRyZXNzIGluZGV4ZWQgYXNzZXQsIHVpbnQyNTYgdXRpbGl6YXRpb25XYWQsIHVpbnQyNTYgbGlxdWlkaXR5UmF0ZVJheVBlclNlYywgdWludDI1NiB2YXJpYWJsZUJvcnJvd1JhdGVSYXlQZXJTZWMsIHVpbnQyNTYgbGlxdWlkaXR5SW5kZXhSYXksIHVpbnQyNTYgdmFyaWFibGVCb3Jyb3dJbmRleFJheSknLFxyXG4gICdldmVudCBTdXBwbGllZChhZGRyZXNzIGluZGV4ZWQgdXNlciwgYWRkcmVzcyBpbmRleGVkIGFzc2V0LCB1aW50MjU2IGFtb3VudCknLFxyXG4gICdldmVudCBXaXRoZHJhd24oYWRkcmVzcyBpbmRleGVkIHVzZXIsIGFkZHJlc3MgaW5kZXhlZCBhc3NldCwgdWludDI1NiBhbW91bnQpJyxcclxuICAnZXZlbnQgQm9ycm93ZWQoYWRkcmVzcyBpbmRleGVkIHVzZXIsIGFkZHJlc3MgaW5kZXhlZCBhc3NldCwgdWludDI1NiBhbW91bnQpJyxcclxuICAnZXZlbnQgUmVwYWlkKGFkZHJlc3MgaW5kZXhlZCB1c2VyLCBhZGRyZXNzIGluZGV4ZWQgb25CZWhhbGZPZiwgYWRkcmVzcyBpbmRleGVkIGFzc2V0LCB1aW50MjU2IGFtb3VudCknLFxyXG4gICdldmVudCBMaXF1aWRhdGVkKGFkZHJlc3MgaW5kZXhlZCBsaXF1aWRhdG9yLCBhZGRyZXNzIGluZGV4ZWQgdXNlciwgYWRkcmVzcyBpbmRleGVkIGRlYnRBc3NldCwgYWRkcmVzcyBpbmRleGVkIGNvbGxhdGVyYWxBc3NldCwgdWludDI1NiBkZWJ0QW1vdW50LCB1aW50MjU2IGNvbGxhdGVyYWxBbW91bnQpJyxcclxuXSBhcyBjb25zdDtcclxuXHJcbmV4cG9ydCBjb25zdCBFUkMyMF9BQkkgPSBbXHJcbiAgLy8gVmlldyBmdW5jdGlvbnNcclxuICAnZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3Mgb3duZXIpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiknLFxyXG4gICdmdW5jdGlvbiBhbGxvd2FuY2UoYWRkcmVzcyBvd25lciwgYWRkcmVzcyBzcGVuZGVyKSBleHRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQyNTYpJyxcclxuICAnZnVuY3Rpb24gZGVjaW1hbHMoKSBleHRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQ4KScsXHJcbiAgJ2Z1bmN0aW9uIHN5bWJvbCgpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAoc3RyaW5nKScsXHJcbiAgJ2Z1bmN0aW9uIG5hbWUoKSBleHRlcm5hbCB2aWV3IHJldHVybnMgKHN0cmluZyknLFxyXG4gICdmdW5jdGlvbiB0b3RhbFN1cHBseSgpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiknLFxyXG4gIFxyXG4gIC8vIFdyaXRlIGZ1bmN0aW9uc1xyXG4gICdmdW5jdGlvbiBhcHByb3ZlKGFkZHJlc3Mgc3BlbmRlciwgdWludDI1NiBhbW91bnQpIGV4dGVybmFsIHJldHVybnMgKGJvb2wpJyxcclxuICAnZnVuY3Rpb24gdHJhbnNmZXIoYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQpIGV4dGVybmFsIHJldHVybnMgKGJvb2wpJyxcclxuICAnZnVuY3Rpb24gdHJhbnNmZXJGcm9tKGFkZHJlc3MgZnJvbSwgYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQpIGV4dGVybmFsIHJldHVybnMgKGJvb2wpJyxcclxuICBcclxuICAvLyBFdmVudHNcclxuICAnZXZlbnQgVHJhbnNmZXIoYWRkcmVzcyBpbmRleGVkIGZyb20sIGFkZHJlc3MgaW5kZXhlZCB0bywgdWludDI1NiB2YWx1ZSknLFxyXG4gICdldmVudCBBcHByb3ZhbChhZGRyZXNzIGluZGV4ZWQgb3duZXIsIGFkZHJlc3MgaW5kZXhlZCBzcGVuZGVyLCB1aW50MjU2IHZhbHVlKScsXHJcbl0gYXMgY29uc3Q7XHJcblxyXG5leHBvcnQgY29uc3QgT1JBQ0xFX0FCSSA9IFtcclxuICAvLyBWaWV3IGZ1bmN0aW9uc1xyXG4gICdmdW5jdGlvbiBnZXRBc3NldFByaWNlMWUxOChhZGRyZXNzIGFzc2V0KSBleHRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQyNTYpJyxcclxuICAnZnVuY3Rpb24gZ2V0QXNzZXRQcmljZShhZGRyZXNzIGFzc2V0KSBleHRlcm5hbCB2aWV3IHJldHVybnMgKHVpbnQyNTYpJyxcclxuICBcclxuICAvLyBXcml0ZSBmdW5jdGlvbnMgKGZvciB0ZXN0aW5nKVxyXG4gICdmdW5jdGlvbiBzZXRBc3NldFByaWNlKGFkZHJlc3MgYXNzZXQsIHVpbnQyNTYgcHJpY2UpIGV4dGVybmFsJyxcclxuICBcclxuICAvLyBFdmVudHNcclxuICAnZXZlbnQgQXNzZXRQcmljZVVwZGF0ZWQoYWRkcmVzcyBpbmRleGVkIGFzc2V0LCB1aW50MjU2IG9sZFByaWNlLCB1aW50MjU2IG5ld1ByaWNlKScsXHJcbl0gYXMgY29uc3Q7XHJcblxyXG4vLyBJbnRlcmVzdCBSYXRlIE1vZGVsIEFCSSAoaWYgbmVlZGVkKVxyXG5leHBvcnQgY29uc3QgSU5URVJFU1RfUkFURV9NT0RFTF9BQkkgPSBbXHJcbiAgJ2Z1bmN0aW9uIGdldEJvcnJvd1JhdGUodWludDI1NiBjYXNoLCB1aW50MjU2IGJvcnJvd3MsIHVpbnQyNTYgcmVzZXJ2ZXMpIGV4dGVybmFsIHZpZXcgcmV0dXJucyAodWludDI1NiknLFxyXG4gICdmdW5jdGlvbiBnZXRTdXBwbHlSYXRlKHVpbnQyNTYgY2FzaCwgdWludDI1NiBib3Jyb3dzLCB1aW50MjU2IHJlc2VydmVzLCB1aW50MjU2IHJlc2VydmVGYWN0b3JNYW50aXNzYSkgZXh0ZXJuYWwgdmlldyByZXR1cm5zICh1aW50MjU2KScsXHJcbl0gYXMgY29uc3Q7XHJcbiJdLCJuYW1lcyI6WyJQT09MX0FCSSIsIkVSQzIwX0FCSSIsIk9SQUNMRV9BQkkiLCJJTlRFUkVTVF9SQVRFX01PREVMX0FCSSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/config/abis.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./src/config/contracts.ts":
/*!*********************************!*\
  !*** ./src/config/contracts.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONFIG: () => (/* binding */ CONFIG),\n/* harmony export */   NETWORK_CONFIG: () => (/* binding */ NETWORK_CONFIG),\n/* harmony export */   getTokenByAddress: () => (/* binding */ getTokenByAddress),\n/* harmony export */   getTokenBySymbol: () => (/* binding */ getTokenBySymbol),\n/* harmony export */   isTokenBorrowable: () => (/* binding */ isTokenBorrowable),\n/* harmony export */   isTokenCollateral: () => (/* binding */ isTokenCollateral)\n/* harmony export */ });\n/* harmony import */ var _addresses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../addresses */ \"(pages-dir-node)/./src/addresses.js\");\n\n// Contract configuration from environment variables\nconst CONFIG = {\n    RPC_URL: \"http://localhost:8545\" || 0,\n    CHAIN_ID: parseInt(\"1337\" || 0, 10),\n    CHAIN_ID_HEX: process.env.NEXT_PUBLIC_CHAIN_ID_HEX || '0x539',\n    // Contract addresses (auto-imported from addresses.js)\n    LENDING_POOL: _addresses__WEBPACK_IMPORTED_MODULE_0__.LendingPoolAddress,\n    PRICE_ORACLE: _addresses__WEBPACK_IMPORTED_MODULE_0__.PriceOracleAddress,\n    WETH: _addresses__WEBPACK_IMPORTED_MODULE_0__.WETHAddress,\n    // Token configuration\n    TOKENS: [\n        {\n            address: '0x0000000000000000000000000000000000000000',\n            symbol: 'ETH',\n            name: 'Ethereum',\n            decimals: 18,\n            isBorrowable: false,\n            isCollateral: false,\n            isNative: true\n        },\n        {\n            address: _addresses__WEBPACK_IMPORTED_MODULE_0__.WETHAddress,\n            symbol: 'WETH',\n            name: 'Wrapped Ethereum',\n            decimals: 18,\n            isBorrowable: false,\n            isCollateral: true\n        },\n        {\n            address: _addresses__WEBPACK_IMPORTED_MODULE_0__.DAIAddress,\n            symbol: 'DAI',\n            name: 'Dai Stablecoin',\n            decimals: 18,\n            isBorrowable: true,\n            isCollateral: false\n        },\n        {\n            address: _addresses__WEBPACK_IMPORTED_MODULE_0__.USDCAddress,\n            symbol: 'USDC',\n            name: 'USD Coin',\n            decimals: 6,\n            isBorrowable: true,\n            isCollateral: false\n        },\n        {\n            address: _addresses__WEBPACK_IMPORTED_MODULE_0__.LINKAddress,\n            symbol: 'LINK',\n            name: 'Chainlink',\n            decimals: 18,\n            isBorrowable: true,\n            isCollateral: false\n        }\n    ]\n};\n// Network configuration\nconst NETWORK_CONFIG = {\n    chainId: CONFIG.CHAIN_ID,\n    chainName: 'Ganache Local',\n    nativeCurrency: {\n        name: 'Ethereum',\n        symbol: 'ETH',\n        decimals: 18\n    },\n    rpcUrls: [\n        CONFIG.RPC_URL\n    ],\n    blockExplorerUrls: null\n};\n// Helper functions\nfunction getTokenByAddress(address) {\n    return CONFIG.TOKENS.find((token)=>token.address.toLowerCase() === address.toLowerCase());\n}\nfunction getTokenBySymbol(symbol) {\n    return CONFIG.TOKENS.find((token)=>token.symbol.toLowerCase() === symbol.toLowerCase());\n}\nfunction isTokenBorrowable(address) {\n    const token = getTokenByAddress(address);\n    return token?.isBorrowable || false;\n}\nfunction isTokenCollateral(address) {\n    const token = getTokenByAddress(address);\n    return token?.isCollateral || false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9jb25maWcvY29udHJhY3RzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFPc0I7QUFFdEIsb0RBQW9EO0FBQzdDLE1BQU1NLFNBQVM7SUFDcEJDLFNBQVNDLHVCQUErQixJQUFJLENBQXVCO0lBQ25FRyxVQUFVQyxTQUFTSixNQUFnQyxJQUFJLENBQU0sRUFBRTtJQUMvRE0sY0FBY04sUUFBUUMsR0FBRyxDQUFDTSx3QkFBd0IsSUFBSTtJQUV0RCx1REFBdUQ7SUFDdkRDLGNBQWNoQiwwREFBa0JBO0lBQ2hDaUIsY0FBY2hCLDBEQUFrQkE7SUFDaENpQixNQUFNaEIsbURBQVdBO0lBRWpCLHNCQUFzQjtJQUN0QmlCLFFBQVE7UUFDTjtZQUNFQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsTUFBTTtZQUNOQyxVQUFVO1lBQ1ZDLGNBQWM7WUFDZEMsY0FBYztZQUNkQyxVQUFVO1FBQ1o7UUFDQTtZQUNFTixTQUFTbEIsbURBQVdBO1lBQ3BCbUIsUUFBUTtZQUNSQyxNQUFNO1lBQ05DLFVBQVU7WUFDVkMsY0FBYztZQUNkQyxjQUFjO1FBQ2hCO1FBQ0E7WUFDRUwsU0FBU2pCLGtEQUFVQTtZQUNuQmtCLFFBQVE7WUFDUkMsTUFBTTtZQUNOQyxVQUFVO1lBQ1ZDLGNBQWM7WUFDZEMsY0FBYztRQUNoQjtRQUNBO1lBQ0VMLFNBQVNoQixtREFBV0E7WUFDcEJpQixRQUFRO1lBQ1JDLE1BQU07WUFDTkMsVUFBVTtZQUNWQyxjQUFjO1lBQ2RDLGNBQWM7UUFDaEI7UUFDQTtZQUNFTCxTQUFTZixtREFBV0E7WUFDcEJnQixRQUFRO1lBQ1JDLE1BQU07WUFDTkMsVUFBVTtZQUNWQyxjQUFjO1lBQ2RDLGNBQWM7UUFDaEI7S0FDRDtBQUNILEVBQVc7QUFFWCx3QkFBd0I7QUFDakIsTUFBTUUsaUJBQWlCO0lBQzVCQyxTQUFTdEIsT0FBT0ssUUFBUTtJQUN4QmtCLFdBQVc7SUFDWEMsZ0JBQWdCO1FBQ2RSLE1BQU07UUFDTkQsUUFBUTtRQUNSRSxVQUFVO0lBQ1o7SUFDQVEsU0FBUztRQUFDekIsT0FBT0MsT0FBTztLQUFDO0lBQ3pCeUIsbUJBQW1CO0FBQ3JCLEVBQUU7QUFFRixtQkFBbUI7QUFDWixTQUFTQyxrQkFBa0JiLE9BQWU7SUFDL0MsT0FBT2QsT0FBT2EsTUFBTSxDQUFDZSxJQUFJLENBQUNDLENBQUFBLFFBQ3hCQSxNQUFNZixPQUFPLENBQUNnQixXQUFXLE9BQU9oQixRQUFRZ0IsV0FBVztBQUV2RDtBQUVPLFNBQVNDLGlCQUFpQmhCLE1BQWM7SUFDN0MsT0FBT2YsT0FBT2EsTUFBTSxDQUFDZSxJQUFJLENBQUNDLENBQUFBLFFBQ3hCQSxNQUFNZCxNQUFNLENBQUNlLFdBQVcsT0FBT2YsT0FBT2UsV0FBVztBQUVyRDtBQUVPLFNBQVNFLGtCQUFrQmxCLE9BQWU7SUFDL0MsTUFBTWUsUUFBUUYsa0JBQWtCYjtJQUNoQyxPQUFPZSxPQUFPWCxnQkFBZ0I7QUFDaEM7QUFFTyxTQUFTZSxrQkFBa0JuQixPQUFlO0lBQy9DLE1BQU1lLFFBQVFGLGtCQUFrQmI7SUFDaEMsT0FBT2UsT0FBT1YsZ0JBQWdCO0FBQ2hDIiwic291cmNlcyI6WyJEOlxcRG9fYW4yXFxsZW5kaHViX3YyXFxsZW5kaHViLWZyb250ZW5kLW5leHRqc1xcc3JjXFxjb25maWdcXGNvbnRyYWN0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBcbiAgTGVuZGluZ1Bvb2xBZGRyZXNzLCBcbiAgUHJpY2VPcmFjbGVBZGRyZXNzLCBcbiAgV0VUSEFkZHJlc3MsIFxuICBEQUlBZGRyZXNzLCBcbiAgVVNEQ0FkZHJlc3MsIFxuICBMSU5LQWRkcmVzcyBcbn0gZnJvbSAnLi4vYWRkcmVzc2VzJztcblxuLy8gQ29udHJhY3QgY29uZmlndXJhdGlvbiBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlc1xuZXhwb3J0IGNvbnN0IENPTkZJRyA9IHtcbiAgUlBDX1VSTDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUlBDX1VSTCB8fCAnaHR0cDovLzEyNy4wLjAuMTo3NTQ1JyxcbiAgQ0hBSU5fSUQ6IHBhcnNlSW50KHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NIQUlOX0lEIHx8ICcxMzM3JywgMTApLCAvLyAxMzM3XG4gIENIQUlOX0lEX0hFWDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0hBSU5fSURfSEVYIHx8ICcweDUzOScsXG4gIFxuICAvLyBDb250cmFjdCBhZGRyZXNzZXMgKGF1dG8taW1wb3J0ZWQgZnJvbSBhZGRyZXNzZXMuanMpXG4gIExFTkRJTkdfUE9PTDogTGVuZGluZ1Bvb2xBZGRyZXNzLFxuICBQUklDRV9PUkFDTEU6IFByaWNlT3JhY2xlQWRkcmVzcyxcbiAgV0VUSDogV0VUSEFkZHJlc3MsXG4gIFxuICAvLyBUb2tlbiBjb25maWd1cmF0aW9uXG4gIFRPS0VOUzogW1xuICAgIHtcbiAgICAgIGFkZHJlc3M6ICcweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLCAvLyBFVEggbmF0aXZlIHRva2VuXG4gICAgICBzeW1ib2w6ICdFVEgnLFxuICAgICAgbmFtZTogJ0V0aGVyZXVtJyxcbiAgICAgIGRlY2ltYWxzOiAxOCxcbiAgICAgIGlzQm9ycm93YWJsZTogZmFsc2UsXG4gICAgICBpc0NvbGxhdGVyYWw6IGZhbHNlLFxuICAgICAgaXNOYXRpdmU6IHRydWUsXG4gICAgfSxcbiAgICB7XG4gICAgICBhZGRyZXNzOiBXRVRIQWRkcmVzcywgLy8gQXV0by1pbXBvcnRlZCBmcm9tIGFkZHJlc3Nlcy5qc1xuICAgICAgc3ltYm9sOiAnV0VUSCcsXG4gICAgICBuYW1lOiAnV3JhcHBlZCBFdGhlcmV1bScsXG4gICAgICBkZWNpbWFsczogMTgsXG4gICAgICBpc0JvcnJvd2FibGU6IGZhbHNlLFxuICAgICAgaXNDb2xsYXRlcmFsOiB0cnVlLFxuICAgIH0sXG4gICAge1xuICAgICAgYWRkcmVzczogREFJQWRkcmVzcywgLy8gQXV0by1pbXBvcnRlZCBmcm9tIGFkZHJlc3Nlcy5qc1xuICAgICAgc3ltYm9sOiAnREFJJyxcbiAgICAgIG5hbWU6ICdEYWkgU3RhYmxlY29pbicsXG4gICAgICBkZWNpbWFsczogMTgsXG4gICAgICBpc0JvcnJvd2FibGU6IHRydWUsXG4gICAgICBpc0NvbGxhdGVyYWw6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgYWRkcmVzczogVVNEQ0FkZHJlc3MsIC8vIEF1dG8taW1wb3J0ZWQgZnJvbSBhZGRyZXNzZXMuanNcbiAgICAgIHN5bWJvbDogJ1VTREMnLFxuICAgICAgbmFtZTogJ1VTRCBDb2luJyxcbiAgICAgIGRlY2ltYWxzOiA2LFxuICAgICAgaXNCb3Jyb3dhYmxlOiB0cnVlLFxuICAgICAgaXNDb2xsYXRlcmFsOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGFkZHJlc3M6IExJTktBZGRyZXNzLCAvLyBBdXRvLWltcG9ydGVkIGZyb20gYWRkcmVzc2VzLmpzXG4gICAgICBzeW1ib2w6ICdMSU5LJyxcbiAgICAgIG5hbWU6ICdDaGFpbmxpbmsnLFxuICAgICAgZGVjaW1hbHM6IDE4LFxuICAgICAgaXNCb3Jyb3dhYmxlOiB0cnVlLFxuICAgICAgaXNDb2xsYXRlcmFsOiBmYWxzZSxcbiAgICB9LFxuICBdLFxufSBhcyBjb25zdDtcblxuLy8gTmV0d29yayBjb25maWd1cmF0aW9uXG5leHBvcnQgY29uc3QgTkVUV09SS19DT05GSUcgPSB7XG4gIGNoYWluSWQ6IENPTkZJRy5DSEFJTl9JRCxcbiAgY2hhaW5OYW1lOiAnR2FuYWNoZSBMb2NhbCcsXG4gIG5hdGl2ZUN1cnJlbmN5OiB7XG4gICAgbmFtZTogJ0V0aGVyZXVtJyxcbiAgICBzeW1ib2w6ICdFVEgnLFxuICAgIGRlY2ltYWxzOiAxOCxcbiAgfSxcbiAgcnBjVXJsczogW0NPTkZJRy5SUENfVVJMXSxcbiAgYmxvY2tFeHBsb3JlclVybHM6IG51bGwsXG59O1xuXG4vLyBIZWxwZXIgZnVuY3Rpb25zXG5leHBvcnQgZnVuY3Rpb24gZ2V0VG9rZW5CeUFkZHJlc3MoYWRkcmVzczogc3RyaW5nKSB7XG4gIHJldHVybiBDT05GSUcuVE9LRU5TLmZpbmQodG9rZW4gPT4gXG4gICAgdG9rZW4uYWRkcmVzcy50b0xvd2VyQ2FzZSgpID09PSBhZGRyZXNzLnRvTG93ZXJDYXNlKClcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRva2VuQnlTeW1ib2woc3ltYm9sOiBzdHJpbmcpIHtcbiAgcmV0dXJuIENPTkZJRy5UT0tFTlMuZmluZCh0b2tlbiA9PiBcbiAgICB0b2tlbi5zeW1ib2wudG9Mb3dlckNhc2UoKSA9PT0gc3ltYm9sLnRvTG93ZXJDYXNlKClcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVG9rZW5Cb3Jyb3dhYmxlKGFkZHJlc3M6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBjb25zdCB0b2tlbiA9IGdldFRva2VuQnlBZGRyZXNzKGFkZHJlc3MpO1xuICByZXR1cm4gdG9rZW4/LmlzQm9ycm93YWJsZSB8fCBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVG9rZW5Db2xsYXRlcmFsKGFkZHJlc3M6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBjb25zdCB0b2tlbiA9IGdldFRva2VuQnlBZGRyZXNzKGFkZHJlc3MpO1xuICByZXR1cm4gdG9rZW4/LmlzQ29sbGF0ZXJhbCB8fCBmYWxzZTtcbn1cbiJdLCJuYW1lcyI6WyJMZW5kaW5nUG9vbEFkZHJlc3MiLCJQcmljZU9yYWNsZUFkZHJlc3MiLCJXRVRIQWRkcmVzcyIsIkRBSUFkZHJlc3MiLCJVU0RDQWRkcmVzcyIsIkxJTktBZGRyZXNzIiwiQ09ORklHIiwiUlBDX1VSTCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19SUENfVVJMIiwiQ0hBSU5fSUQiLCJwYXJzZUludCIsIk5FWFRfUFVCTElDX0NIQUlOX0lEIiwiQ0hBSU5fSURfSEVYIiwiTkVYVF9QVUJMSUNfQ0hBSU5fSURfSEVYIiwiTEVORElOR19QT09MIiwiUFJJQ0VfT1JBQ0xFIiwiV0VUSCIsIlRPS0VOUyIsImFkZHJlc3MiLCJzeW1ib2wiLCJuYW1lIiwiZGVjaW1hbHMiLCJpc0JvcnJvd2FibGUiLCJpc0NvbGxhdGVyYWwiLCJpc05hdGl2ZSIsIk5FVFdPUktfQ09ORklHIiwiY2hhaW5JZCIsImNoYWluTmFtZSIsIm5hdGl2ZUN1cnJlbmN5IiwicnBjVXJscyIsImJsb2NrRXhwbG9yZXJVcmxzIiwiZ2V0VG9rZW5CeUFkZHJlc3MiLCJmaW5kIiwidG9rZW4iLCJ0b0xvd2VyQ2FzZSIsImdldFRva2VuQnlTeW1ib2wiLCJpc1Rva2VuQm9ycm93YWJsZSIsImlzVG9rZW5Db2xsYXRlcmFsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/config/contracts.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./src/context/LendState.js":
/*!**********************************!*\
  !*** ./src/context/LendState.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lendContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lendContext */ \"(pages-dir-node)/./src/context/lendContext.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var _config_contracts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/contracts */ \"(pages-dir-node)/./src/config/contracts.ts\");\n/* harmony import */ var _lib_tx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/tx */ \"(pages-dir-node)/./src/lib/tx.ts\");\n/* harmony import */ var _addresses__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../addresses */ \"(pages-dir-node)/./src/addresses.js\");\n/* harmony import */ var _abis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../abis */ \"(pages-dir-node)/./src/abis/index.js\");\n/* harmony import */ var _abis__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_abis__WEBPACK_IMPORTED_MODULE_7__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([ethers__WEBPACK_IMPORTED_MODULE_3__, _lib_tx__WEBPACK_IMPORTED_MODULE_5__]);\n([ethers__WEBPACK_IMPORTED_MODULE_3__, _lib_tx__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n// Utility functions\nconst numberToEthers = (number)=>{\n    return ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseEther(number.toString());\n};\nconst reportError = (error)=>{\n    console.error(\"LendState Error:\", JSON.stringify(error));\n    console.error(\"Error details:\", error);\n};\nconst LendState = (props)=>{\n    //* Declaring all the states\n    // Set metamask details\n    const [metamaskDetails, setMetamaskDetails] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        provider: null,\n        networkName: null,\n        signer: null,\n        currentAccount: null,\n        chainId: null\n    });\n    // User assets and balances\n    const [userAssets, setUserAssets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [supplyAssets, setSupplyAssets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [assetsToBorrow, setAssetsToBorrow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [yourBorrows, setYourBorrows] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Contract details\n    const [contract, setContract] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        lendingPoolContract: null,\n        oracleContract: null\n    });\n    // Summary data\n    const [supplySummary, setSupplySummary] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        totalUSDBalance: 0,\n        weightedAvgAPY: 0,\n        totalUSDCollateral: 0\n    });\n    const [borrowSummary, setBorrowSummary] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        totalUSDBalance: 0,\n        weightedAvgAPY: 0,\n        totalBorrowPowerUsed: 0\n    });\n    // Account data\n    const [accountData, setAccountData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        collateralUSD: \"0\",\n        debtUSD: \"0\",\n        healthFactor: \"0\"\n    });\n    // Connect wallet\n    // const connectWallet = useCallback(async () => {\n    //   console.log(\"1. Connecting to wallet...\");\n    //   const { ethereum } = window;\n    //   const failMessage = \"Please install Metamask & connect your Metamask\";\n    //   try {\n    //     if (!ethereum) {\n    //       alert(failMessage);\n    //       return;\n    //     }\n    //     const accounts = await ethereum.request({\n    //       method: \"eth_requestAccounts\",\n    //     });\n    //     // Listen for account and chain changes\n    //     ethereum.on(\"chainChanged\", () => {\n    //       window.location.reload();\n    //     });\n    //     ethereum.on(\"accountsChanged\", () => {\n    //       window.location.reload();\n    //     });\n    //     const provider = new ethers.BrowserProvider(ethereum);\n    //     const network = await provider.getNetwork();\n    //     const networkName = network.name;\n    //     const signer = await provider.getSigner();\n    //     if (accounts.length) {\n    //       let currentAddress = accounts[0];\n    //       setMetamaskDetails({\n    //         provider: provider,\n    //         networkName: networkName,\n    //         signer: signer,\n    //         currentAccount: currentAddress,\n    //         chainId: Number(network.chainId),\n    //       });\n    //       console.log(\"Connected to wallet:\", currentAddress);\n    //     } else {\n    //       alert(failMessage);\n    //       return;\n    //     }\n    //   } catch (error) {\n    //     reportError(error);\n    //   }\n    // }, []);\n    const connectWallet = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[connectWallet]\": async ()=>{\n            console.log(\"1. Connecting to wallet...\");\n            const { ethereum } = window;\n            const failMessage = \"Please install Metamask & connect your Metamask\";\n            try {\n                if (!ethereum) {\n                    alert(failMessage);\n                    return;\n                }\n                const accounts = await ethereum.request({\n                    method: \"eth_requestAccounts\"\n                });\n                // Listen for account and chain changes\n                ethereum.on(\"chainChanged\", {\n                    \"LendState.useCallback[connectWallet]\": ()=>{\n                        window.location.reload();\n                    }\n                }[\"LendState.useCallback[connectWallet]\"]);\n                ethereum.on(\"accountsChanged\", {\n                    \"LendState.useCallback[connectWallet]\": ()=>{\n                        window.location.reload();\n                    }\n                }[\"LendState.useCallback[connectWallet]\"]);\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.BrowserProvider(ethereum);\n                const network = await provider.getNetwork();\n                const networkName = network.name;\n                const signer = await provider.getSigner();\n                if (accounts.length) {\n                    let currentAddress = accounts[0];\n                    setMetamaskDetails({\n                        provider: provider,\n                        networkName: networkName,\n                        signer: signer,\n                        currentAccount: currentAddress,\n                        chainId: Number(network.chainId)\n                    });\n                    console.log(\"Connected to wallet++++++++++++++++++++++++++++++++++:\", currentAddress);\n                } else {\n                    alert(failMessage);\n                    return;\n                }\n            } catch (error) {\n                reportError(error);\n            }\n        }\n    }[\"LendState.useCallback[connectWallet]\"], []);\n    // Get contract instance\n    const getContract = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getContract]\": async (address, abi)=>{\n            if (!metamaskDetails.provider) return null;\n            const contract = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(address, abi, metamaskDetails.provider);\n            return contract;\n        }\n    }[\"LendState.useCallback[getContract]\"], [\n        metamaskDetails.provider\n    ]);\n    // Get user assets (balances)\n    const getUserAssets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getUserAssets]\": async ()=>{\n            console.log(\"2. Getting user assets...\");\n            try {\n                if (!metamaskDetails.provider || !metamaskDetails.currentAccount) return [];\n                const assets = await Promise.all(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.map({\n                    \"LendState.useCallback[getUserAssets]\": async (token)=>{\n                        let balance = \"0\";\n                        let balanceUSD = 0;\n                        try {\n                            if (token.isNative) {\n                                // ETH native balance\n                                const bal = await metamaskDetails.provider.getBalance(metamaskDetails.currentAccount);\n                                balance = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatEther(bal);\n                            } else {\n                                // ERC20 token balance\n                                balance = await (0,_lib_tx__WEBPACK_IMPORTED_MODULE_5__.getTokenBalance)(metamaskDetails.provider, token.address, metamaskDetails.currentAccount, token.decimals);\n                            }\n                            // Get USD value\n                            const price = await getPriceUSD(token.address);\n                            balanceUSD = parseFloat(balance) * parseFloat(price);\n                            return {\n                                address: token.address,\n                                symbol: token.symbol,\n                                name: token.name,\n                                decimals: token.decimals,\n                                isNative: token.isNative,\n                                balance: balance,\n                                balanceUSD: balanceUSD,\n                                priceUSD: price\n                            };\n                        } catch (error) {\n                            console.warn(`Error getting balance for ${token.symbol}:`, error);\n                            return {\n                                address: token.address,\n                                symbol: token.symbol,\n                                name: token.name,\n                                decimals: token.decimals,\n                                isNative: token.isNative,\n                                balance: \"0\",\n                                balanceUSD: 0,\n                                priceUSD: \"0\"\n                            };\n                        }\n                    }\n                }[\"LendState.useCallback[getUserAssets]\"]));\n                setUserAssets(assets);\n                console.log(\"Got user assets:\", assets);\n                return assets;\n            } catch (error) {\n                reportError(error);\n                return [];\n            }\n        }\n    }[\"LendState.useCallback[getUserAssets]\"], [\n        metamaskDetails.provider,\n        metamaskDetails.currentAccount\n    ]);\n    // Get price in USD\n    const getPriceUSD = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getPriceUSD]\": async (asset)=>{\n            if (!metamaskDetails.provider) return \"0\";\n            try {\n                const abi = [\n                    'function getAssetPrice1e18(address asset) view returns (uint256)'\n                ];\n                const oracle = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.PRICE_ORACLE, abi, metamaskDetails.provider);\n                const price = await oracle.getAssetPrice1e18(asset);\n                return ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(price, 18);\n            } catch (error) {\n                console.warn(`Error getting price for ${asset}:`, error);\n                return \"0\";\n            }\n        }\n    }[\"LendState.useCallback[getPriceUSD]\"], [\n        metamaskDetails.provider\n    ]);\n    // Get amount in USD\n    const getAmountInUSD = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getAmountInUSD]\": async (address, amount)=>{\n            try {\n                const price = await getPriceUSD(address);\n                const amountInUSD = parseFloat(amount) * parseFloat(price);\n                return amountInUSD;\n            } catch (error) {\n                reportError(error);\n                return 0;\n            }\n        }\n    }[\"LendState.useCallback[getAmountInUSD]\"], [\n        getPriceUSD\n    ]);\n    // Approve tokens\n    const ApproveToContinue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[ApproveToContinue]\": async (tokenAddress, approveAmount)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const token = _config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.find({\n                    \"LendState.useCallback[ApproveToContinue].token\": (t)=>t.address.toLowerCase() === tokenAddress.toLowerCase()\n                }[\"LendState.useCallback[ApproveToContinue].token\"]);\n                if (!token) throw new Error(\"Token not found\");\n                await (0,_lib_tx__WEBPACK_IMPORTED_MODULE_5__.approveIfNeeded)(metamaskDetails.signer, tokenAddress, _config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.LENDING_POOL, approveAmount, token.decimals);\n                console.log(\"Token approved:\", tokenAddress);\n                return {\n                    status: 200,\n                    message: \"Transaction Successful...\"\n                };\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[ApproveToContinue]\"], [\n        metamaskDetails.signer\n    ]);\n    // Lend asset\n    const LendAsset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[LendAsset]\": async (token, supplyAmount)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const tokenInfo = _config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.find({\n                    \"LendState.useCallback[LendAsset].tokenInfo\": (t)=>t.address.toLowerCase() === token.toLowerCase()\n                }[\"LendState.useCallback[LendAsset].tokenInfo\"]);\n                if (!tokenInfo) throw new Error(\"Token not found\");\n                const amount = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(supplyAmount, tokenInfo.decimals);\n                const tx = await (0,_lib_tx__WEBPACK_IMPORTED_MODULE_5__.lend)(metamaskDetails.signer, token, amount);\n                if (tx) {\n                    console.log(\"Asset lent successfully:\", token, supplyAmount);\n                    return {\n                        status: 200,\n                        message: \"Transaction Successful...\",\n                        hash: tx.hash\n                    };\n                }\n                throw new Error(\"Transaction failed\");\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[LendAsset]\"], [\n        metamaskDetails.signer\n    ]);\n    // Withdraw asset\n    const WithdrawAsset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[WithdrawAsset]\": async (tokenAddress, withdrawAmount)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const tokenInfo = _config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.find({\n                    \"LendState.useCallback[WithdrawAsset].tokenInfo\": (t)=>t.address.toLowerCase() === tokenAddress.toLowerCase()\n                }[\"LendState.useCallback[WithdrawAsset].tokenInfo\"]);\n                if (!tokenInfo) throw new Error(\"Token not found\");\n                const amount = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(withdrawAmount, tokenInfo.decimals);\n                const tx = await (0,_lib_tx__WEBPACK_IMPORTED_MODULE_5__.withdraw)(metamaskDetails.signer, tokenAddress, amount);\n                if (tx) {\n                    console.log(\"Asset withdrawn successfully:\", tokenAddress, withdrawAmount);\n                    return {\n                        status: 200,\n                        message: \"Transaction Successful...\",\n                        hash: tx.hash\n                    };\n                }\n                throw new Error(\"Transaction failed\");\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[WithdrawAsset]\"], [\n        metamaskDetails.signer\n    ]);\n    // Borrow asset\n    const borrowAsset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[borrowAsset]\": async (token, borrowAmount)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const tokenInfo = _config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.find({\n                    \"LendState.useCallback[borrowAsset].tokenInfo\": (t)=>t.address.toLowerCase() === token.toLowerCase()\n                }[\"LendState.useCallback[borrowAsset].tokenInfo\"]);\n                if (!tokenInfo) throw new Error(\"Token not found\");\n                const amount = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(borrowAmount, tokenInfo.decimals);\n                const tx = await (0,_lib_tx__WEBPACK_IMPORTED_MODULE_5__.borrow)(metamaskDetails.signer, token, amount);\n                if (tx) {\n                    console.log(\"Asset borrowed successfully:\", token, borrowAmount);\n                    return {\n                        status: 200,\n                        message: \"Transaction Successful...\",\n                        hash: tx.hash\n                    };\n                }\n                throw new Error(\"Transaction failed\");\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[borrowAsset]\"], [\n        metamaskDetails.signer\n    ]);\n    // Repay asset\n    const repayAsset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[repayAsset]\": async (tokenAddress, repayAmount)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const tokenInfo = _config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.find({\n                    \"LendState.useCallback[repayAsset].tokenInfo\": (t)=>t.address.toLowerCase() === tokenAddress.toLowerCase()\n                }[\"LendState.useCallback[repayAsset].tokenInfo\"]);\n                if (!tokenInfo) throw new Error(\"Token not found\");\n                const amount = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(repayAmount, tokenInfo.decimals);\n                const tx = await (0,_lib_tx__WEBPACK_IMPORTED_MODULE_5__.repay)(metamaskDetails.signer, tokenAddress, amount);\n                if (tx) {\n                    console.log(\"Asset repaid successfully:\", tokenAddress, repayAmount);\n                    return {\n                        status: 200,\n                        message: \"Transaction Successful...\",\n                        hash: tx.hash\n                    };\n                }\n                throw new Error(\"Transaction failed\");\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[repayAsset]\"], [\n        metamaskDetails.signer\n    ]);\n    // Get account data (collateral, debt, health factor)\n    const getAccountData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getAccountData]\": async (user)=>{\n            try {\n                if (!metamaskDetails.provider) return null;\n                const pool = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_addresses__WEBPACK_IMPORTED_MODULE_6__.LendingPoolAddress, _abis__WEBPACK_IMPORTED_MODULE_7__.LendingPoolABI.abi, metamaskDetails.provider);\n                const wallet = user || metamaskDetails.currentAccount || ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.ZeroAddress;\n                // Add error handling for empty response\n                let col, debt, hf;\n                try {\n                    [col, debt, hf] = await pool.getAccountData(wallet);\n                } catch (contractError) {\n                    console.log('Contract getAccountData failed, using defaults:', contractError.message);\n                    // Return default values for new users\n                    col = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(\"0\", 18);\n                    debt = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(\"0\", 18);\n                    hf = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(\"115792089237316195423570985008687907853269984665640564039457.584007913129639935\", 18); // Max uint256\n                }\n                const accountData = {\n                    collateralUSD: ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(col, 18),\n                    debtUSD: ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(debt, 18),\n                    healthFactor: ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(hf, 18)\n                };\n                setAccountData(accountData);\n                return accountData;\n            } catch (error) {\n                console.log('getAccountData error, using defaults:', error.message);\n                // Return default values on any error\n                const accountData = {\n                    collateralUSD: \"0\",\n                    debtUSD: \"0\",\n                    healthFactor: \"115792089237316195423570985008687907853269984665640564039457.584007913129639935\"\n                };\n                setAccountData(accountData);\n                return accountData;\n            }\n        }\n    }[\"LendState.useCallback[getAccountData]\"], [\n        metamaskDetails.provider,\n        metamaskDetails.currentAccount\n    ]);\n    // Get your supplies\n    const getYourSupplies = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getYourSupplies]\": async ()=>{\n            console.log(\"3. Getting your supplies...\");\n            try {\n                if (!metamaskDetails.provider || !metamaskDetails.currentAccount) return [];\n                const abi = [\n                    'function getUserReserve(address user, address asset) view returns (tuple(uint128 principal,uint128 index) supply, tuple(uint128 principal,uint128 index) borrow)'\n                ];\n                const pool = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.LENDING_POOL, abi, metamaskDetails.provider);\n                const supplies = await Promise.all(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.filter({\n                    \"LendState.useCallback[getYourSupplies]\": (t)=>!t.isNative\n                }[\"LendState.useCallback[getYourSupplies]\"]).map({\n                    \"LendState.useCallback[getYourSupplies]\": async (token)=>{\n                        try {\n                            const userReserve = await pool.getUserReserve(metamaskDetails.currentAccount, token.address);\n                            const supplyPrincipal = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(userReserve.supply.principal, 18);\n                            const supplyIndex = userReserve.supply.index.toString();\n                            if (parseFloat(supplyPrincipal) > 0) {\n                                const price = await getPriceUSD(token.address);\n                                const balanceUSD = parseFloat(supplyPrincipal) * parseFloat(price);\n                                return {\n                                    address: token.address,\n                                    symbol: token.symbol,\n                                    name: token.name,\n                                    decimals: token.decimals,\n                                    supplyPrincipal: supplyPrincipal,\n                                    supplyIndex: supplyIndex,\n                                    balanceUSD: balanceUSD,\n                                    priceUSD: price\n                                };\n                            }\n                            return null;\n                        } catch (error) {\n                            console.warn(`Error getting supply for ${token.symbol}:`, error);\n                            return null;\n                        }\n                    }\n                }[\"LendState.useCallback[getYourSupplies]\"]));\n                const validSupplies = supplies.filter({\n                    \"LendState.useCallback[getYourSupplies].validSupplies\": (s)=>s !== null\n                }[\"LendState.useCallback[getYourSupplies].validSupplies\"]);\n                setSupplyAssets(validSupplies);\n                // Calculate summary\n                const totalUSDBalance = validSupplies.reduce({\n                    \"LendState.useCallback[getYourSupplies].totalUSDBalance\": (sum, asset)=>sum + asset.balanceUSD\n                }[\"LendState.useCallback[getYourSupplies].totalUSDBalance\"], 0);\n                const weightedAvgAPY = validSupplies.length > 0 ? validSupplies.reduce({\n                    \"LendState.useCallback[getYourSupplies]\": (sum, asset)=>sum + (asset.apy || 0)\n                }[\"LendState.useCallback[getYourSupplies]\"], 0) / validSupplies.length : 0;\n                const totalUSDCollateral = validSupplies.reduce({\n                    \"LendState.useCallback[getYourSupplies].totalUSDCollateral\": (sum, asset)=>sum + asset.balanceUSD\n                }[\"LendState.useCallback[getYourSupplies].totalUSDCollateral\"], 0);\n                setSupplySummary({\n                    totalUSDBalance,\n                    weightedAvgAPY,\n                    totalUSDCollateral\n                });\n                console.log(\"Got your supplies:\", validSupplies);\n                return validSupplies;\n            } catch (error) {\n                reportError(error);\n                return [];\n            }\n        }\n    }[\"LendState.useCallback[getYourSupplies]\"], [\n        metamaskDetails.provider,\n        metamaskDetails.currentAccount,\n        getPriceUSD\n    ]);\n    // Get your borrows\n    const getYourBorrows = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getYourBorrows]\": async ()=>{\n            console.log(\"4. Getting your borrows...\");\n            try {\n                if (!metamaskDetails.provider || !metamaskDetails.currentAccount) return [];\n                const abi = [\n                    'function getUserReserve(address user, address asset) view returns (tuple(uint128 principal,uint128 index) supply, tuple(uint128 principal,uint128 index) borrow)'\n                ];\n                const pool = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.LENDING_POOL, abi, metamaskDetails.provider);\n                const borrows = await Promise.all(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.filter({\n                    \"LendState.useCallback[getYourBorrows]\": (t)=>!t.isNative\n                }[\"LendState.useCallback[getYourBorrows]\"]).map({\n                    \"LendState.useCallback[getYourBorrows]\": async (token)=>{\n                        try {\n                            const userReserve = await pool.getUserReserve(metamaskDetails.currentAccount, token.address);\n                            const borrowPrincipal = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(userReserve.borrow.principal, 18);\n                            const borrowIndex = userReserve.borrow.index.toString();\n                            if (parseFloat(borrowPrincipal) > 0) {\n                                const price = await getPriceUSD(token.address);\n                                const balanceUSD = parseFloat(borrowPrincipal) * parseFloat(price);\n                                return {\n                                    address: token.address,\n                                    symbol: token.symbol,\n                                    name: token.name,\n                                    decimals: token.decimals,\n                                    borrowPrincipal: borrowPrincipal,\n                                    borrowIndex: borrowIndex,\n                                    balanceUSD: balanceUSD,\n                                    priceUSD: price\n                                };\n                            }\n                            return null;\n                        } catch (error) {\n                            console.warn(`Error getting borrow for ${token.symbol}:`, error);\n                            return null;\n                        }\n                    }\n                }[\"LendState.useCallback[getYourBorrows]\"]));\n                const validBorrows = borrows.filter({\n                    \"LendState.useCallback[getYourBorrows].validBorrows\": (b)=>b !== null\n                }[\"LendState.useCallback[getYourBorrows].validBorrows\"]);\n                setYourBorrows(validBorrows);\n                // Calculate summary\n                const totalUSDBalance = validBorrows.reduce({\n                    \"LendState.useCallback[getYourBorrows].totalUSDBalance\": (sum, asset)=>sum + asset.balanceUSD\n                }[\"LendState.useCallback[getYourBorrows].totalUSDBalance\"], 0);\n                const weightedAvgAPY = validBorrows.length > 0 ? validBorrows.reduce({\n                    \"LendState.useCallback[getYourBorrows]\": (sum, asset)=>sum + (asset.apy || 0)\n                }[\"LendState.useCallback[getYourBorrows]\"], 0) / validBorrows.length : 0;\n                const totalBorrowPowerUsed = totalUSDBalance;\n                setBorrowSummary({\n                    totalUSDBalance,\n                    weightedAvgAPY,\n                    totalBorrowPowerUsed\n                });\n                console.log(\"Got your borrows:\", validBorrows);\n                return validBorrows;\n            } catch (error) {\n                reportError(error);\n                return [];\n            }\n        }\n    }[\"LendState.useCallback[getYourBorrows]\"], [\n        metamaskDetails.provider,\n        metamaskDetails.currentAccount,\n        getPriceUSD\n    ]);\n    // Get assets to borrow\n    const getAssetsToBorrow = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getAssetsToBorrow]\": async ()=>{\n            console.log(\"5. Getting assets to borrow...\");\n            try {\n                if (!metamaskDetails.provider) return [];\n                const abi = [\n                    'function reserves(address) view returns (uint128 reserveCash, uint128 totalDebtPrincipal, uint128 liquidityIndex, uint128 variableBorrowIndex, uint64 liquidityRateRayPerSec, uint64 variableBorrowRateRayPerSec, uint16 reserveFactorBps, uint16 ltvBps, uint16 liqThresholdBps, uint16 liqBonusBps, uint16 closeFactorBps, uint8 decimals, bool isBorrowable, uint16 optimalUBps, uint64 baseRateRayPerSec, uint64 slope1RayPerSec, uint64 slope2RayPerSec, uint40 lastUpdate)'\n                ];\n                const pool = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.LENDING_POOL, abi, metamaskDetails.provider);\n                const assets = await Promise.all(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.filter({\n                    \"LendState.useCallback[getAssetsToBorrow]\": (t)=>!t.isNative\n                }[\"LendState.useCallback[getAssetsToBorrow]\"]).map({\n                    \"LendState.useCallback[getAssetsToBorrow]\": async (token)=>{\n                        try {\n                            const reserve = await pool.reserves(token.address);\n                            const isBorrowable = Boolean(reserve.isBorrowable);\n                            const reserveCash = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(reserve.reserveCash, 18);\n                            const price = await getPriceUSD(token.address);\n                            if (isBorrowable && parseFloat(reserveCash) > 0) {\n                                return {\n                                    address: token.address,\n                                    symbol: token.symbol,\n                                    name: token.name,\n                                    decimals: token.decimals,\n                                    reserveCash: reserveCash,\n                                    isBorrowable: isBorrowable,\n                                    priceUSD: price,\n                                    ltvBps: Number(reserve.ltvBps),\n                                    liqThresholdBps: Number(reserve.liqThresholdBps)\n                                };\n                            }\n                            return null;\n                        } catch (error) {\n                            console.warn(`Error getting borrow asset ${token.symbol}:`, error);\n                            return null;\n                        }\n                    }\n                }[\"LendState.useCallback[getAssetsToBorrow]\"]));\n                const validAssets = assets.filter({\n                    \"LendState.useCallback[getAssetsToBorrow].validAssets\": (a)=>a !== null\n                }[\"LendState.useCallback[getAssetsToBorrow].validAssets\"]);\n                setAssetsToBorrow(validAssets);\n                console.log(\"Got assets to borrow:\", validAssets);\n                return validAssets;\n            } catch (error) {\n                reportError(error);\n                return [];\n            }\n        }\n    }[\"LendState.useCallback[getAssetsToBorrow]\"], [\n        metamaskDetails.provider,\n        getPriceUSD\n    ]);\n    // Wrap ETH to WETH\n    const wrapEth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[wrapEth]\": async (amountEth)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const data = '0xd0e30db0'; // deposit()\n                console.log('wrapEth → using WETH address:', _addresses__WEBPACK_IMPORTED_MODULE_6__.WETHAddress);\n                const tx = await metamaskDetails.signer.sendTransaction({\n                    to: _addresses__WEBPACK_IMPORTED_MODULE_6__.WETHAddress,\n                    value: ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseEther(amountEth),\n                    data\n                });\n                await tx.wait();\n                console.log(\"ETH wrapped to WETH:\", amountEth);\n                return {\n                    status: 200,\n                    message: \"Transaction Successful...\",\n                    hash: tx.hash\n                };\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[wrapEth]\"], [\n        metamaskDetails.signer\n    ]);\n    // Unwrap WETH to ETH\n    const unwrapWeth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[unwrapWeth]\": async (amountEth)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const abi = [\n                    'function withdraw(uint256 wad)'\n                ];\n                console.log('unwrapWeth → using WETH address:', _addresses__WEBPACK_IMPORTED_MODULE_6__.WETHAddress);\n                const weth = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_addresses__WEBPACK_IMPORTED_MODULE_6__.WETHAddress, abi, metamaskDetails.signer);\n                const tx = await weth.withdraw(ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseEther(amountEth));\n                await tx.wait();\n                console.log(\"WETH unwrapped to ETH:\", amountEth);\n                return {\n                    status: 200,\n                    message: \"Transaction Successful...\",\n                    hash: tx.hash\n                };\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[unwrapWeth]\"], [\n        metamaskDetails.signer\n    ]);\n    // Withdraw token to ETH (for all tokens with withdraw function)\n    const withdrawToken = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[withdrawToken]\": async (tokenAddress, amount)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const abi = [\n                    'function withdraw(uint256 amount)'\n                ];\n                console.log('withdrawToken → using address:', tokenAddress);\n                const token = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(tokenAddress, abi, metamaskDetails.signer);\n                const tx = await token.withdraw(ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseEther(amount));\n                await tx.wait();\n                console.log(\"Token withdrawn to ETH:\", amount);\n                return {\n                    status: 200,\n                    message: \"Withdraw Successful...\",\n                    hash: tx.hash\n                };\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[withdrawToken]\"], [\n        metamaskDetails.signer\n    ]);\n    // Deposit ETH to get token (for all tokens with deposit function)\n    const depositToToken = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[depositToToken]\": async (tokenAddress, amountEth)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const abi = [\n                    'function deposit() payable'\n                ];\n                console.log('depositToToken → using address:', tokenAddress);\n                const token = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(tokenAddress, abi, metamaskDetails.signer);\n                const tx = await token.deposit({\n                    value: ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseEther(amountEth)\n                });\n                await tx.wait();\n                console.log(\"ETH deposited to token:\", amountEth);\n                return {\n                    status: 200,\n                    message: \"Deposit Successful...\",\n                    hash: tx.hash\n                };\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[depositToToken]\"], [\n        metamaskDetails.signer\n    ]);\n    // Refresh all data\n    const refresh = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[refresh]\": async ()=>{\n            try {\n                await Promise.all([\n                    getUserAssets(),\n                    getYourSupplies(),\n                    getYourBorrows(),\n                    getAssetsToBorrow(),\n                    getAccountData()\n                ]);\n                console.log(\"All data refreshed\");\n            } catch (error) {\n                reportError(error);\n            }\n        }\n    }[\"LendState.useCallback[refresh]\"], [\n        getUserAssets,\n        getYourSupplies,\n        getYourBorrows,\n        getAssetsToBorrow,\n        getAccountData\n    ]);\n    // Update interests (accrue)\n    const updateInterests = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[updateInterests]\": async (asset)=>{\n            if (!metamaskDetails.signer) {\n                throw new Error(\"No signer available\");\n            }\n            try {\n                const abi = [\n                    'function accruePublic(address asset)'\n                ];\n                const pool = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.LENDING_POOL, abi, metamaskDetails.signer);\n                const tx = await pool.accruePublic(asset);\n                await tx.wait();\n                console.log(\"Interests updated for asset:\", asset);\n                return {\n                    status: 200,\n                    message: \"Transaction Successful...\"\n                };\n            } catch (error) {\n                reportError(error);\n                return {\n                    status: 500,\n                    message: error.message || error.reason\n                };\n            }\n        }\n    }[\"LendState.useCallback[updateInterests]\"], [\n        metamaskDetails.signer\n    ]);\n    // Get user total available balance\n    const getUserTotalAvailableBalance = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getUserTotalAvailableBalance]\": async ()=>{\n            try {\n                if (!metamaskDetails.provider || !metamaskDetails.currentAccount) return 0;\n                const abi = [\n                    'function getUserTotalAvailableBalanceInUSD(address user, uint256 assetType) view returns (uint256)'\n                ];\n                const pool = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.LENDING_POOL, abi, metamaskDetails.provider);\n                const maxAmount = await pool.getUserTotalAvailableBalanceInUSD(metamaskDetails.currentAccount, 1);\n                return Number(ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(maxAmount, 18));\n            } catch (error) {\n                reportError(error);\n                return 0;\n            }\n        }\n    }[\"LendState.useCallback[getUserTotalAvailableBalance]\"], [\n        metamaskDetails.provider,\n        metamaskDetails.currentAccount\n    ]);\n    // Get tokens per USD amount\n    const getTokensPerUSDAmount = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[getTokensPerUSDAmount]\": async (token, amount)=>{\n            try {\n                if (!metamaskDetails.provider) return 0;\n                const abi = [\n                    'function getTokensPerUSDAmount(address token, uint256 amount) view returns (uint256)'\n                ];\n                const helper = new ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.PRICE_ORACLE, abi, metamaskDetails.provider);\n                const maxQty = await helper.getTokensPerUSDAmount(token, ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.parseUnits(amount.toString(), 18));\n                return Number(ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.formatUnits(maxQty, 18));\n            } catch (error) {\n                reportError(error);\n                return 0;\n            }\n        }\n    }[\"LendState.useCallback[getTokensPerUSDAmount]\"], [\n        metamaskDetails.provider\n    ]);\n    // Objectify supplied assets (format data)\n    const objectifySuppliedAssets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[objectifySuppliedAssets]\": async (assets)=>{\n            const assetsList = [];\n            for(let i = 0; i < assets.length; i++){\n                const token = assets[i].token;\n                let lendQty = assets[i].lentQty;\n                const amountInUSD = await getAmountInUSD(token, lendQty);\n                lendQty = Number(assets[i].lentQty) / 1e18;\n                const maxSupplyAmount = await getUserTotalAvailableBalance();\n                const maxQty = await getTokensPerUSDAmount(token, maxSupplyAmount);\n                const qty = lendQty <= maxQty ? lendQty : maxQty;\n                assetsList.push({\n                    token: assets[i].token,\n                    balance: lendQty,\n                    apy: Number(assets[i].lentApy),\n                    balanceInUSD: amountInUSD,\n                    maxSupply: qty\n                });\n            }\n            return assetsList;\n        }\n    }[\"LendState.useCallback[objectifySuppliedAssets]\"], [\n        getAmountInUSD,\n        getUserTotalAvailableBalance,\n        getTokensPerUSDAmount\n    ]);\n    // Objectify borrowed assets (format data)\n    const objectifyBorrowedAssets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[objectifyBorrowedAssets]\": async (assets)=>{\n            const borrowsList = [];\n            for(let i = 0; i < assets.length; i++){\n                const token = assets[i].token;\n                const borrowQty = assets[i].borrowQty;\n                const borrowApy = assets[i].borrowApy;\n                const amountInUSD = await getAmountInUSD(token, borrowQty);\n                borrowsList.push({\n                    token: token,\n                    borrowQty: Number(borrowQty),\n                    borrowApy: Number(borrowApy),\n                    borrowedBalInUSD: amountInUSD\n                });\n            }\n            return borrowsList;\n        }\n    }[\"LendState.useCallback[objectifyBorrowedAssets]\"], [\n        getAmountInUSD\n    ]);\n    // Merge objectified assets with token info\n    const mergeObjectifiedAssets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LendState.useCallback[mergeObjectifiedAssets]\": (assets)=>{\n            const result = _config_contracts__WEBPACK_IMPORTED_MODULE_4__.CONFIG.TOKENS.filter({\n                \"LendState.useCallback[mergeObjectifiedAssets].result\": (tokenList)=>{\n                    return assets.some({\n                        \"LendState.useCallback[mergeObjectifiedAssets].result\": (assetList)=>{\n                            return tokenList.address.toLowerCase() === assetList.token.toLowerCase();\n                        }\n                    }[\"LendState.useCallback[mergeObjectifiedAssets].result\"]);\n                }\n            }[\"LendState.useCallback[mergeObjectifiedAssets].result\"]).map({\n                \"LendState.useCallback[mergeObjectifiedAssets].result\": (assetObj)=>({\n                        ...assets.find({\n                            \"LendState.useCallback[mergeObjectifiedAssets].result\": (item)=>item.token.toLowerCase() === assetObj.address.toLowerCase()\n                        }[\"LendState.useCallback[mergeObjectifiedAssets].result\"]),\n                        ...assetObj\n                    })\n            }[\"LendState.useCallback[mergeObjectifiedAssets].result\"]);\n            return result;\n        }\n    }[\"LendState.useCallback[mergeObjectifiedAssets]\"], []);\n    // Context value\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"LendState.useMemo[contextValue]\": ()=>({\n                // State\n                metamaskDetails,\n                userAssets,\n                supplyAssets,\n                assetsToBorrow,\n                yourBorrows,\n                supplySummary,\n                borrowSummary,\n                accountData,\n                contract,\n                // Wallet functions\n                connectWallet,\n                refresh,\n                // Asset functions\n                getUserAssets,\n                getYourSupplies,\n                getYourBorrows,\n                getAssetsToBorrow,\n                // Transaction functions\n                ApproveToContinue,\n                LendAsset,\n                WithdrawAsset,\n                borrowAsset,\n                repayAsset,\n                // Utility functions\n                getContract,\n                getPriceUSD,\n                getAmountInUSD,\n                numberToEthers,\n                reportError,\n                // ETH/WETH functions\n                wrapEth,\n                unwrapWeth,\n                // Account functions\n                getAccountData,\n                getUserTotalAvailableBalance,\n                getTokensPerUSDAmount,\n                // Data processing functions\n                objectifySuppliedAssets,\n                objectifyBorrowedAssets,\n                mergeObjectifiedAssets,\n                // Interest functions\n                updateInterests,\n                // Token withdraw/deposit functions\n                withdrawToken,\n                depositToToken\n            })\n    }[\"LendState.useMemo[contextValue]\"], [\n        metamaskDetails,\n        userAssets,\n        supplyAssets,\n        assetsToBorrow,\n        yourBorrows,\n        supplySummary,\n        borrowSummary,\n        accountData,\n        contract,\n        connectWallet,\n        refresh,\n        getUserAssets,\n        getYourSupplies,\n        getYourBorrows,\n        getAssetsToBorrow,\n        ApproveToContinue,\n        LendAsset,\n        WithdrawAsset,\n        borrowAsset,\n        repayAsset,\n        getContract,\n        getPriceUSD,\n        getAmountInUSD,\n        wrapEth,\n        unwrapWeth,\n        getAccountData,\n        getUserTotalAvailableBalance,\n        getTokensPerUSDAmount,\n        objectifySuppliedAssets,\n        objectifyBorrowedAssets,\n        mergeObjectifiedAssets,\n        updateInterests\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lendContext__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Provider, {\n        value: contextValue,\n        children: props.children\n    }, void 0, false, {\n        fileName: \"D:\\\\Do_an2\\\\lendhub_v2\\\\lendhub-frontend-nextjs\\\\src\\\\context\\\\LendState.js\",\n        lineNumber: 898,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LendState);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9jb250ZXh0L0xlbmRTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThEO0FBQ3RCO0FBQ1I7QUFDYTtBQUNpSDtBQUM3RDtBQUM1QjtBQUVyRSxvQkFBb0I7QUFDcEIsTUFBTXlCLGlCQUFpQixDQUFDQztJQUN0QixPQUFPckIsMENBQU1BLENBQUNzQixVQUFVLENBQUNELE9BQU9FLFFBQVE7QUFDMUM7QUFFQSxNQUFNQyxjQUFjLENBQUNDO0lBQ25CQyxRQUFRRCxLQUFLLENBQUMsb0JBQW9CRSxLQUFLQyxTQUFTLENBQUNIO0lBQ2pEQyxRQUFRRCxLQUFLLENBQUMsa0JBQWtCQTtBQUNsQztBQUVBLE1BQU1JLFlBQVksQ0FBQ0M7SUFDakIsNEJBQTRCO0lBRTVCLHVCQUF1QjtJQUN2QixNQUFNLENBQUNDLGlCQUFpQkMsbUJBQW1CLEdBQUdwQywrQ0FBUUEsQ0FBQztRQUNyRHFDLFVBQVU7UUFDVkMsYUFBYTtRQUNiQyxRQUFRO1FBQ1JDLGdCQUFnQjtRQUNoQkMsU0FBUztJQUNYO0lBRUEsMkJBQTJCO0lBQzNCLE1BQU0sQ0FBQ0MsWUFBWUMsY0FBYyxHQUFHM0MsK0NBQVFBLENBQUMsRUFBRTtJQUMvQyxNQUFNLENBQUM0QyxjQUFjQyxnQkFBZ0IsR0FBRzdDLCtDQUFRQSxDQUFDLEVBQUU7SUFDbkQsTUFBTSxDQUFDOEMsZ0JBQWdCQyxrQkFBa0IsR0FBRy9DLCtDQUFRQSxDQUFDLEVBQUU7SUFDdkQsTUFBTSxDQUFDZ0QsYUFBYUMsZUFBZSxHQUFHakQsK0NBQVFBLENBQUMsRUFBRTtJQUVqRCxtQkFBbUI7SUFDbkIsTUFBTSxDQUFDa0QsVUFBVUMsWUFBWSxHQUFHbkQsK0NBQVFBLENBQUM7UUFDdkNvRCxxQkFBcUI7UUFDckJDLGdCQUFnQjtJQUNsQjtJQUVBLGVBQWU7SUFDZixNQUFNLENBQUNDLGVBQWVDLGlCQUFpQixHQUFHdkQsK0NBQVFBLENBQUM7UUFDakR3RCxpQkFBaUI7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dkc7Z0JBQ0E0RDtnQkFDQWU7Z0JBQ0FNO2dCQUVBLHdCQUF3QjtnQkFDeEJyRDtnQkFDQVc7Z0JBQ0FNO2dCQUNBRTtnQkFDQUU7Z0JBRUEsb0JBQW9CO2dCQUNwQnJEO2dCQUNBbUI7Z0JBQ0FVO2dCQUNBNUY7Z0JBQ0FJO2dCQUVBLHFCQUFxQjtnQkFDckIwSjtnQkFDQU87Z0JBRUEsb0JBQW9CO2dCQUNwQi9DO2dCQUNBdUQ7Z0JBQ0FHO2dCQUVBLDRCQUE0QjtnQkFDNUJHO2dCQUNBVztnQkFDQUs7Z0JBRUEscUJBQXFCO2dCQUNyQnhCO2dCQUVBLG1DQUFtQztnQkFDbkNKO2dCQUNBQztZQUNGOzBDQUFJO1FBQ0Y3SjtRQUNBTztRQUNBRTtRQUNBRTtRQUNBRTtRQUNBTTtRQUNBSztRQUNBRztRQUNBWjtRQUNBaUI7UUFDQStIO1FBQ0F2RztRQUNBNEQ7UUFDQWU7UUFDQU07UUFDQXJEO1FBQ0FXO1FBQ0FNO1FBQ0FFO1FBQ0FFO1FBQ0FyRDtRQUNBbUI7UUFDQVU7UUFDQWtFO1FBQ0FPO1FBQ0EvQztRQUNBdUQ7UUFDQUc7UUFDQUc7UUFDQVc7UUFDQUs7UUFDQXhCO0tBQ0Q7SUFFRCxxQkFDRSw4REFBQ2hNLDZEQUFvQjtRQUFDd0wsT0FBT3VDO2tCQUMxQmhNLE1BQU1rTSxRQUFROzs7Ozs7QUFHckI7QUFFQSxpRUFBZW5NLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIkQ6XFxEb19hbjJcXGxlbmRodWJfdjJcXGxlbmRodWItZnJvbnRlbmQtbmV4dGpzXFxzcmNcXGNvbnRleHRcXExlbmRTdGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgbGVuZENvbnRleHQgZnJvbSBcIi4vbGVuZENvbnRleHRcIjtcbmltcG9ydCB7IGV0aGVycyB9IGZyb20gXCJldGhlcnNcIjtcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gXCIuLi9jb25maWcvY29udHJhY3RzXCI7XG5pbXBvcnQgeyBnZXRUb2tlbkJhbGFuY2UsIGdldFRva2VuQWxsb3dhbmNlLCBhcHByb3ZlSWZOZWVkZWQsIGxlbmQgYXMgbGVuZFR4LCB3aXRoZHJhdyBhcyB3aXRoZHJhd1R4LCBib3Jyb3cgYXMgYm9ycm93VHgsIHJlcGF5IGFzIHJlcGF5VHggfSBmcm9tIFwiLi4vbGliL3R4XCI7XG5pbXBvcnQgeyBFVEhBZGRyZXNzLCBMZW5kaW5nUG9vbEFkZHJlc3MsIExlbmRpbmdIZWxwZXJBZGRyZXNzLCBXRVRIQWRkcmVzcyB9IGZyb20gXCIuLi9hZGRyZXNzZXNcIjtcbmltcG9ydCB7IFRva2VuQUJJLCBMZW5kaW5nUG9vbEFCSSwgTGVuZGluZ0hlbHBlckFCSSB9IGZyb20gXCIuLi9hYmlzXCI7XG5cbi8vIFV0aWxpdHkgZnVuY3Rpb25zXG5jb25zdCBudW1iZXJUb0V0aGVycyA9IChudW1iZXIpID0+IHtcbiAgcmV0dXJuIGV0aGVycy5wYXJzZUV0aGVyKG51bWJlci50b1N0cmluZygpKTtcbn07XG5cbmNvbnN0IHJlcG9ydEVycm9yID0gKGVycm9yKSA9PiB7XG4gIGNvbnNvbGUuZXJyb3IoXCJMZW5kU3RhdGUgRXJyb3I6XCIsIEpTT04uc3RyaW5naWZ5KGVycm9yKSk7XG4gIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBkZXRhaWxzOlwiLCBlcnJvcik7XG59O1xuXG5jb25zdCBMZW5kU3RhdGUgPSAocHJvcHMpID0+IHtcbiAgLy8qIERlY2xhcmluZyBhbGwgdGhlIHN0YXRlc1xuXG4gIC8vIFNldCBtZXRhbWFzayBkZXRhaWxzXG4gIGNvbnN0IFttZXRhbWFza0RldGFpbHMsIHNldE1ldGFtYXNrRGV0YWlsc10gPSB1c2VTdGF0ZSh7XG4gICAgcHJvdmlkZXI6IG51bGwsXG4gICAgbmV0d29ya05hbWU6IG51bGwsXG4gICAgc2lnbmVyOiBudWxsLFxuICAgIGN1cnJlbnRBY2NvdW50OiBudWxsLFxuICAgIGNoYWluSWQ6IG51bGwsXG4gIH0pO1xuXG4gIC8vIFVzZXIgYXNzZXRzIGFuZCBiYWxhbmNlc1xuICBjb25zdCBbdXNlckFzc2V0cywgc2V0VXNlckFzc2V0c10gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFtzdXBwbHlBc3NldHMsIHNldFN1cHBseUFzc2V0c10gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFthc3NldHNUb0JvcnJvdywgc2V0QXNzZXRzVG9Cb3Jyb3ddID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbeW91ckJvcnJvd3MsIHNldFlvdXJCb3Jyb3dzXSA9IHVzZVN0YXRlKFtdKTtcblxuICAvLyBDb250cmFjdCBkZXRhaWxzXG4gIGNvbnN0IFtjb250cmFjdCwgc2V0Q29udHJhY3RdID0gdXNlU3RhdGUoe1xuICAgIGxlbmRpbmdQb29sQ29udHJhY3Q6IG51bGwsXG4gICAgb3JhY2xlQ29udHJhY3Q6IG51bGwsXG4gIH0pO1xuXG4gIC8vIFN1bW1hcnkgZGF0YVxuICBjb25zdCBbc3VwcGx5U3VtbWFyeSwgc2V0U3VwcGx5U3VtbWFyeV0gPSB1c2VTdGF0ZSh7XG4gICAgdG90YWxVU0RCYWxhbmNlOiAwLFxuICAgIHdlaWdodGVkQXZnQVBZOiAwLFxuICAgIHRvdGFsVVNEQ29sbGF0ZXJhbDogMCxcbiAgfSk7XG5cbiAgY29uc3QgW2JvcnJvd1N1bW1hcnksIHNldEJvcnJvd1N1bW1hcnldID0gdXNlU3RhdGUoe1xuICAgIHRvdGFsVVNEQmFsYW5jZTogMCxcbiAgICB3ZWlnaHRlZEF2Z0FQWTogMCxcbiAgICB0b3RhbEJvcnJvd1Bvd2VyVXNlZDogMCxcbiAgfSk7XG5cbiAgLy8gQWNjb3VudCBkYXRhXG4gIGNvbnN0IFthY2NvdW50RGF0YSwgc2V0QWNjb3VudERhdGFdID0gdXNlU3RhdGUoe1xuICAgIGNvbGxhdGVyYWxVU0Q6IFwiMFwiLFxuICAgIGRlYnRVU0Q6IFwiMFwiLFxuICAgIGhlYWx0aEZhY3RvcjogXCIwXCIsXG4gIH0pO1xuXG4gIC8vIENvbm5lY3Qgd2FsbGV0XG4gIC8vIGNvbnN0IGNvbm5lY3RXYWxsZXQgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gIC8vICAgY29uc29sZS5sb2coXCIxLiBDb25uZWN0aW5nIHRvIHdhbGxldC4uLlwiKTtcbiAgLy8gICBjb25zdCB7IGV0aGVyZXVtIH0gPSB3aW5kb3c7XG4gIC8vICAgY29uc3QgZmFpbE1lc3NhZ2UgPSBcIlBsZWFzZSBpbnN0YWxsIE1ldGFtYXNrICYgY29ubmVjdCB5b3VyIE1ldGFtYXNrXCI7XG4gICAgXG4gIC8vICAgdHJ5IHtcbiAgLy8gICAgIGlmICghZXRoZXJldW0pIHtcbiAgLy8gICAgICAgYWxlcnQoZmFpbE1lc3NhZ2UpO1xuICAvLyAgICAgICByZXR1cm47XG4gIC8vICAgICB9XG5cbiAgLy8gICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgZXRoZXJldW0ucmVxdWVzdCh7XG4gIC8vICAgICAgIG1ldGhvZDogXCJldGhfcmVxdWVzdEFjY291bnRzXCIsXG4gIC8vICAgICB9KTtcblxuICAvLyAgICAgLy8gTGlzdGVuIGZvciBhY2NvdW50IGFuZCBjaGFpbiBjaGFuZ2VzXG4gIC8vICAgICBldGhlcmV1bS5vbihcImNoYWluQ2hhbmdlZFwiLCAoKSA9PiB7XG4gIC8vICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgLy8gICAgIH0pO1xuICAvLyAgICAgZXRoZXJldW0ub24oXCJhY2NvdW50c0NoYW5nZWRcIiwgKCkgPT4ge1xuICAvLyAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gIC8vICAgICB9KTtcblxuICAvLyAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLkJyb3dzZXJQcm92aWRlcihldGhlcmV1bSk7XG4gIC8vICAgICBjb25zdCBuZXR3b3JrID0gYXdhaXQgcHJvdmlkZXIuZ2V0TmV0d29yaygpO1xuICAvLyAgICAgY29uc3QgbmV0d29ya05hbWUgPSBuZXR3b3JrLm5hbWU7XG4gIC8vICAgICBjb25zdCBzaWduZXIgPSBhd2FpdCBwcm92aWRlci5nZXRTaWduZXIoKTtcblxuICAvLyAgICAgaWYgKGFjY291bnRzLmxlbmd0aCkge1xuICAvLyAgICAgICBsZXQgY3VycmVudEFkZHJlc3MgPSBhY2NvdW50c1swXTtcbiAgLy8gICAgICAgc2V0TWV0YW1hc2tEZXRhaWxzKHtcbiAgLy8gICAgICAgICBwcm92aWRlcjogcHJvdmlkZXIsXG4gIC8vICAgICAgICAgbmV0d29ya05hbWU6IG5ldHdvcmtOYW1lLFxuICAvLyAgICAgICAgIHNpZ25lcjogc2lnbmVyLFxuICAvLyAgICAgICAgIGN1cnJlbnRBY2NvdW50OiBjdXJyZW50QWRkcmVzcyxcbiAgLy8gICAgICAgICBjaGFpbklkOiBOdW1iZXIobmV0d29yay5jaGFpbklkKSxcbiAgLy8gICAgICAgfSk7XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGVkIHRvIHdhbGxldDpcIiwgY3VycmVudEFkZHJlc3MpO1xuICAvLyAgICAgfSBlbHNlIHtcbiAgLy8gICAgICAgYWxlcnQoZmFpbE1lc3NhZ2UpO1xuICAvLyAgICAgICByZXR1cm47XG4gIC8vICAgICB9XG4gIC8vICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgLy8gICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgLy8gICB9XG4gIC8vIH0sIFtdKTtcblxuICBjb25zdCBjb25uZWN0V2FsbGV0ID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiMS4gQ29ubmVjdGluZyB0byB3YWxsZXQuLi5cIik7XG4gICAgY29uc3QgeyBldGhlcmV1bSB9ID0gd2luZG93O1xuICAgIGNvbnN0IGZhaWxNZXNzYWdlID0gXCJQbGVhc2UgaW5zdGFsbCBNZXRhbWFzayAmIGNvbm5lY3QgeW91ciBNZXRhbWFza1wiO1xuICAgIHRyeSB7XG4gICAgICBpZiAoIWV0aGVyZXVtKSB7XG4gICAgICAgIGFsZXJ0KGZhaWxNZXNzYWdlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IGV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6IFwiZXRoX3JlcXVlc3RBY2NvdW50c1wiIH0pO1xuXG4gICAgICAvLyBMaXN0ZW4gZm9yIGFjY291bnQgYW5kIGNoYWluIGNoYW5nZXNcbiAgICAgIGV0aGVyZXVtLm9uKFwiY2hhaW5DaGFuZ2VkXCIsICgpID0+IHtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgfSk7XG4gICAgICBldGhlcmV1bS5vbihcImFjY291bnRzQ2hhbmdlZFwiLCAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMuQnJvd3NlclByb3ZpZGVyKGV0aGVyZXVtKTtcbiAgICAgIGNvbnN0IG5ldHdvcmsgPSBhd2FpdCBwcm92aWRlci5nZXROZXR3b3JrKCk7XG4gICAgICBjb25zdCBuZXR3b3JrTmFtZSA9IG5ldHdvcmsubmFtZTtcbiAgICAgIGNvbnN0IHNpZ25lciA9IGF3YWl0IHByb3ZpZGVyLmdldFNpZ25lcigpO1xuXG4gICAgICBpZiAoYWNjb3VudHMubGVuZ3RoKSB7XG4gICAgICAgIGxldCBjdXJyZW50QWRkcmVzcyA9IGFjY291bnRzWzBdO1xuICAgICAgICBzZXRNZXRhbWFza0RldGFpbHMoe1xuICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlcixcbiAgICAgICAgICBuZXR3b3JrTmFtZTogbmV0d29ya05hbWUsXG4gICAgICAgICAgc2lnbmVyOiBzaWduZXIsXG4gICAgICAgICAgY3VycmVudEFjY291bnQ6IGN1cnJlbnRBZGRyZXNzLFxuICAgICAgICAgIGNoYWluSWQ6IE51bWJlcihuZXR3b3JrLmNoYWluSWQpLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgdG8gd2FsbGV0KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKzpcIiwgY3VycmVudEFkZHJlc3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWxlcnQoZmFpbE1lc3NhZ2UpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICAvLyBHZXQgY29udHJhY3QgaW5zdGFuY2VcbiAgY29uc3QgZ2V0Q29udHJhY3QgPSB1c2VDYWxsYmFjayhhc3luYyAoYWRkcmVzcywgYWJpKSA9PiB7XG4gICAgaWYgKCFtZXRhbWFza0RldGFpbHMucHJvdmlkZXIpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGNvbnRyYWN0ID0gbmV3IGV0aGVycy5Db250cmFjdChhZGRyZXNzLCBhYmksIG1ldGFtYXNrRGV0YWlscy5wcm92aWRlcik7XG4gICAgcmV0dXJuIGNvbnRyYWN0O1xuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyXSk7XG5cbiAgLy8gR2V0IHVzZXIgYXNzZXRzIChiYWxhbmNlcylcbiAgY29uc3QgZ2V0VXNlckFzc2V0cyA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIjIuIEdldHRpbmcgdXNlciBhc3NldHMuLi5cIik7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyIHx8ICFtZXRhbWFza0RldGFpbHMuY3VycmVudEFjY291bnQpIHJldHVybiBbXTtcblxuICAgICAgY29uc3QgYXNzZXRzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICAgIENPTkZJRy5UT0tFTlMubWFwKGFzeW5jICh0b2tlbikgPT4ge1xuICAgICAgICAgIGxldCBiYWxhbmNlID0gXCIwXCI7XG4gICAgICAgICAgbGV0IGJhbGFuY2VVU0QgPSAwO1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0b2tlbi5pc05hdGl2ZSkge1xuICAgICAgICAgICAgICAvLyBFVEggbmF0aXZlIGJhbGFuY2VcbiAgICAgICAgICAgICAgY29uc3QgYmFsID0gYXdhaXQgbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyLmdldEJhbGFuY2UobWV0YW1hc2tEZXRhaWxzLmN1cnJlbnRBY2NvdW50KTtcbiAgICAgICAgICAgICAgYmFsYW5jZSA9IGV0aGVycy5mb3JtYXRFdGhlcihiYWwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8gRVJDMjAgdG9rZW4gYmFsYW5jZVxuICAgICAgICAgICAgICBiYWxhbmNlID0gYXdhaXQgZ2V0VG9rZW5CYWxhbmNlKFxuICAgICAgICAgICAgICAgIG1ldGFtYXNrRGV0YWlscy5wcm92aWRlcixcbiAgICAgICAgICAgICAgICB0b2tlbi5hZGRyZXNzLFxuICAgICAgICAgICAgICAgIG1ldGFtYXNrRGV0YWlscy5jdXJyZW50QWNjb3VudCxcbiAgICAgICAgICAgICAgICB0b2tlbi5kZWNpbWFsc1xuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBHZXQgVVNEIHZhbHVlXG4gICAgICAgICAgICBjb25zdCBwcmljZSA9IGF3YWl0IGdldFByaWNlVVNEKHRva2VuLmFkZHJlc3MpO1xuICAgICAgICAgICAgYmFsYW5jZVVTRCA9IHBhcnNlRmxvYXQoYmFsYW5jZSkgKiBwYXJzZUZsb2F0KHByaWNlKTtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgYWRkcmVzczogdG9rZW4uYWRkcmVzcyxcbiAgICAgICAgICAgICAgc3ltYm9sOiB0b2tlbi5zeW1ib2wsXG4gICAgICAgICAgICAgIG5hbWU6IHRva2VuLm5hbWUsXG4gICAgICAgICAgICAgIGRlY2ltYWxzOiB0b2tlbi5kZWNpbWFscyxcbiAgICAgICAgICAgICAgaXNOYXRpdmU6IHRva2VuLmlzTmF0aXZlLFxuICAgICAgICAgICAgICBiYWxhbmNlOiBiYWxhbmNlLFxuICAgICAgICAgICAgICBiYWxhbmNlVVNEOiBiYWxhbmNlVVNELFxuICAgICAgICAgICAgICBwcmljZVVTRDogcHJpY2UsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYEVycm9yIGdldHRpbmcgYmFsYW5jZSBmb3IgJHt0b2tlbi5zeW1ib2x9OmAsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuLmFkZHJlc3MsXG4gICAgICAgICAgICAgIHN5bWJvbDogdG9rZW4uc3ltYm9sLFxuICAgICAgICAgICAgICBuYW1lOiB0b2tlbi5uYW1lLFxuICAgICAgICAgICAgICBkZWNpbWFsczogdG9rZW4uZGVjaW1hbHMsXG4gICAgICAgICAgICAgIGlzTmF0aXZlOiB0b2tlbi5pc05hdGl2ZSxcbiAgICAgICAgICAgICAgYmFsYW5jZTogXCIwXCIsXG4gICAgICAgICAgICAgIGJhbGFuY2VVU0Q6IDAsXG4gICAgICAgICAgICAgIHByaWNlVVNEOiBcIjBcIixcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgKTtcblxuICAgICAgc2V0VXNlckFzc2V0cyhhc3NldHMpO1xuICAgICAgY29uc29sZS5sb2coXCJHb3QgdXNlciBhc3NldHM6XCIsIGFzc2V0cyk7XG4gICAgICByZXR1cm4gYXNzZXRzO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyLCBtZXRhbWFza0RldGFpbHMuY3VycmVudEFjY291bnRdKTtcblxuICAvLyBHZXQgcHJpY2UgaW4gVVNEXG4gIGNvbnN0IGdldFByaWNlVVNEID0gdXNlQ2FsbGJhY2soYXN5bmMgKGFzc2V0KSA9PiB7XG4gICAgaWYgKCFtZXRhbWFza0RldGFpbHMucHJvdmlkZXIpIHJldHVybiBcIjBcIjtcbiAgICB0cnkge1xuICAgICAgY29uc3QgYWJpID0gWydmdW5jdGlvbiBnZXRBc3NldFByaWNlMWUxOChhZGRyZXNzIGFzc2V0KSB2aWV3IHJldHVybnMgKHVpbnQyNTYpJ107XG4gICAgICBjb25zdCBvcmFjbGUgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KENPTkZJRy5QUklDRV9PUkFDTEUsIGFiaSwgbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyKTtcbiAgICAgIGNvbnN0IHByaWNlID0gYXdhaXQgb3JhY2xlLmdldEFzc2V0UHJpY2UxZTE4KGFzc2V0KTtcbiAgICAgIHJldHVybiBldGhlcnMuZm9ybWF0VW5pdHMocHJpY2UsIDE4KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKGBFcnJvciBnZXR0aW5nIHByaWNlIGZvciAke2Fzc2V0fTpgLCBlcnJvcik7XG4gICAgICByZXR1cm4gXCIwXCI7XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyXSk7XG5cbiAgLy8gR2V0IGFtb3VudCBpbiBVU0RcbiAgY29uc3QgZ2V0QW1vdW50SW5VU0QgPSB1c2VDYWxsYmFjayhhc3luYyAoYWRkcmVzcywgYW1vdW50KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHByaWNlID0gYXdhaXQgZ2V0UHJpY2VVU0QoYWRkcmVzcyk7XG4gICAgICBjb25zdCBhbW91bnRJblVTRCA9IHBhcnNlRmxvYXQoYW1vdW50KSAqIHBhcnNlRmxvYXQocHJpY2UpO1xuICAgICAgcmV0dXJuIGFtb3VudEluVVNEO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG4gIH0sIFtnZXRQcmljZVVTRF0pO1xuXG4gIC8vIEFwcHJvdmUgdG9rZW5zXG4gIGNvbnN0IEFwcHJvdmVUb0NvbnRpbnVlID0gdXNlQ2FsbGJhY2soYXN5bmMgKHRva2VuQWRkcmVzcywgYXBwcm92ZUFtb3VudCkgPT4ge1xuICAgIGlmICghbWV0YW1hc2tEZXRhaWxzLnNpZ25lcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gc2lnbmVyIGF2YWlsYWJsZVwiKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgdG9rZW4gPSBDT05GSUcuVE9LRU5TLmZpbmQodCA9PiB0LmFkZHJlc3MudG9Mb3dlckNhc2UoKSA9PT0gdG9rZW5BZGRyZXNzLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKCF0b2tlbikgdGhyb3cgbmV3IEVycm9yKFwiVG9rZW4gbm90IGZvdW5kXCIpO1xuXG4gICAgICBhd2FpdCBhcHByb3ZlSWZOZWVkZWQoXG4gICAgICAgIG1ldGFtYXNrRGV0YWlscy5zaWduZXIsXG4gICAgICAgIHRva2VuQWRkcmVzcyxcbiAgICAgICAgQ09ORklHLkxFTkRJTkdfUE9PTCxcbiAgICAgICAgYXBwcm92ZUFtb3VudCxcbiAgICAgICAgdG9rZW4uZGVjaW1hbHNcbiAgICAgICk7XG5cbiAgICAgIGNvbnNvbGUubG9nKFwiVG9rZW4gYXBwcm92ZWQ6XCIsIHRva2VuQWRkcmVzcyk7XG4gICAgICByZXR1cm4geyBzdGF0dXM6IDIwMCwgbWVzc2FnZTogXCJUcmFuc2FjdGlvbiBTdWNjZXNzZnVsLi4uXCIgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuIHsgc3RhdHVzOiA1MDAsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfHwgZXJyb3IucmVhc29uIH07XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnNpZ25lcl0pO1xuXG4gIC8vIExlbmQgYXNzZXRcbiAgY29uc3QgTGVuZEFzc2V0ID0gdXNlQ2FsbGJhY2soYXN5bmMgKHRva2VuLCBzdXBwbHlBbW91bnQpID0+IHtcbiAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5zaWduZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHNpZ25lciBhdmFpbGFibGVcIik7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHRva2VuSW5mbyA9IENPTkZJRy5UT0tFTlMuZmluZCh0ID0+IHQuYWRkcmVzcy50b0xvd2VyQ2FzZSgpID09PSB0b2tlbi50b0xvd2VyQ2FzZSgpKTtcbiAgICAgIGlmICghdG9rZW5JbmZvKSB0aHJvdyBuZXcgRXJyb3IoXCJUb2tlbiBub3QgZm91bmRcIik7XG5cbiAgICAgIGNvbnN0IGFtb3VudCA9IGV0aGVycy5wYXJzZVVuaXRzKHN1cHBseUFtb3VudCwgdG9rZW5JbmZvLmRlY2ltYWxzKTtcbiAgICAgIGNvbnN0IHR4ID0gYXdhaXQgbGVuZFR4KG1ldGFtYXNrRGV0YWlscy5zaWduZXIsIHRva2VuLCBhbW91bnQpO1xuICAgICAgXG4gICAgICBpZiAodHgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJBc3NldCBsZW50IHN1Y2Nlc3NmdWxseTpcIiwgdG9rZW4sIHN1cHBseUFtb3VudCk7XG4gICAgICAgIHJldHVybiB7IHN0YXR1czogMjAwLCBtZXNzYWdlOiBcIlRyYW5zYWN0aW9uIFN1Y2Nlc3NmdWwuLi5cIiwgaGFzaDogdHguaGFzaCB9O1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNhY3Rpb24gZmFpbGVkXCIpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4geyBzdGF0dXM6IDUwMCwgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB8fCBlcnJvci5yZWFzb24gfTtcbiAgICB9XG4gIH0sIFttZXRhbWFza0RldGFpbHMuc2lnbmVyXSk7XG5cbiAgLy8gV2l0aGRyYXcgYXNzZXRcbiAgY29uc3QgV2l0aGRyYXdBc3NldCA9IHVzZUNhbGxiYWNrKGFzeW5jICh0b2tlbkFkZHJlc3MsIHdpdGhkcmF3QW1vdW50KSA9PiB7XG4gICAgaWYgKCFtZXRhbWFza0RldGFpbHMuc2lnbmVyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzaWduZXIgYXZhaWxhYmxlXCIpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCB0b2tlbkluZm8gPSBDT05GSUcuVE9LRU5TLmZpbmQodCA9PiB0LmFkZHJlc3MudG9Mb3dlckNhc2UoKSA9PT0gdG9rZW5BZGRyZXNzLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKCF0b2tlbkluZm8pIHRocm93IG5ldyBFcnJvcihcIlRva2VuIG5vdCBmb3VuZFwiKTtcblxuICAgICAgY29uc3QgYW1vdW50ID0gZXRoZXJzLnBhcnNlVW5pdHMod2l0aGRyYXdBbW91bnQsIHRva2VuSW5mby5kZWNpbWFscyk7XG4gICAgICBjb25zdCB0eCA9IGF3YWl0IHdpdGhkcmF3VHgobWV0YW1hc2tEZXRhaWxzLnNpZ25lciwgdG9rZW5BZGRyZXNzLCBhbW91bnQpO1xuICAgICAgXG4gICAgICBpZiAodHgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJBc3NldCB3aXRoZHJhd24gc3VjY2Vzc2Z1bGx5OlwiLCB0b2tlbkFkZHJlc3MsIHdpdGhkcmF3QW1vdW50KTtcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiAyMDAsIG1lc3NhZ2U6IFwiVHJhbnNhY3Rpb24gU3VjY2Vzc2Z1bC4uLlwiLCBoYXNoOiB0eC5oYXNoIH07XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2FjdGlvbiBmYWlsZWRcIik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgIHJldHVybiB7IHN0YXR1czogNTAwLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIHx8IGVycm9yLnJlYXNvbiB9O1xuICAgIH1cbiAgfSwgW21ldGFtYXNrRGV0YWlscy5zaWduZXJdKTtcblxuICAvLyBCb3Jyb3cgYXNzZXRcbiAgY29uc3QgYm9ycm93QXNzZXQgPSB1c2VDYWxsYmFjayhhc3luYyAodG9rZW4sIGJvcnJvd0Ftb3VudCkgPT4ge1xuICAgIGlmICghbWV0YW1hc2tEZXRhaWxzLnNpZ25lcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gc2lnbmVyIGF2YWlsYWJsZVwiKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgdG9rZW5JbmZvID0gQ09ORklHLlRPS0VOUy5maW5kKHQgPT4gdC5hZGRyZXNzLnRvTG93ZXJDYXNlKCkgPT09IHRva2VuLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKCF0b2tlbkluZm8pIHRocm93IG5ldyBFcnJvcihcIlRva2VuIG5vdCBmb3VuZFwiKTtcblxuICAgICAgY29uc3QgYW1vdW50ID0gZXRoZXJzLnBhcnNlVW5pdHMoYm9ycm93QW1vdW50LCB0b2tlbkluZm8uZGVjaW1hbHMpO1xuICAgICAgY29uc3QgdHggPSBhd2FpdCBib3Jyb3dUeChtZXRhbWFza0RldGFpbHMuc2lnbmVyLCB0b2tlbiwgYW1vdW50KTtcbiAgICAgIFxuICAgICAgaWYgKHR4KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQXNzZXQgYm9ycm93ZWQgc3VjY2Vzc2Z1bGx5OlwiLCB0b2tlbiwgYm9ycm93QW1vdW50KTtcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiAyMDAsIG1lc3NhZ2U6IFwiVHJhbnNhY3Rpb24gU3VjY2Vzc2Z1bC4uLlwiLCBoYXNoOiB0eC5oYXNoIH07XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUcmFuc2FjdGlvbiBmYWlsZWRcIik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgIHJldHVybiB7IHN0YXR1czogNTAwLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIHx8IGVycm9yLnJlYXNvbiB9O1xuICAgIH1cbiAgfSwgW21ldGFtYXNrRGV0YWlscy5zaWduZXJdKTtcblxuICAvLyBSZXBheSBhc3NldFxuICBjb25zdCByZXBheUFzc2V0ID0gdXNlQ2FsbGJhY2soYXN5bmMgKHRva2VuQWRkcmVzcywgcmVwYXlBbW91bnQpID0+IHtcbiAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5zaWduZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHNpZ25lciBhdmFpbGFibGVcIik7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHRva2VuSW5mbyA9IENPTkZJRy5UT0tFTlMuZmluZCh0ID0+IHQuYWRkcmVzcy50b0xvd2VyQ2FzZSgpID09PSB0b2tlbkFkZHJlc3MudG9Mb3dlckNhc2UoKSk7XG4gICAgICBpZiAoIXRva2VuSW5mbykgdGhyb3cgbmV3IEVycm9yKFwiVG9rZW4gbm90IGZvdW5kXCIpO1xuXG4gICAgICBjb25zdCBhbW91bnQgPSBldGhlcnMucGFyc2VVbml0cyhyZXBheUFtb3VudCwgdG9rZW5JbmZvLmRlY2ltYWxzKTtcbiAgICAgIGNvbnN0IHR4ID0gYXdhaXQgcmVwYXlUeChtZXRhbWFza0RldGFpbHMuc2lnbmVyLCB0b2tlbkFkZHJlc3MsIGFtb3VudCk7XG4gICAgICBcbiAgICAgIGlmICh0eCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkFzc2V0IHJlcGFpZCBzdWNjZXNzZnVsbHk6XCIsIHRva2VuQWRkcmVzcywgcmVwYXlBbW91bnQpO1xuICAgICAgICByZXR1cm4geyBzdGF0dXM6IDIwMCwgbWVzc2FnZTogXCJUcmFuc2FjdGlvbiBTdWNjZXNzZnVsLi4uXCIsIGhhc2g6IHR4Lmhhc2ggfTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRyYW5zYWN0aW9uIGZhaWxlZFwiKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuIHsgc3RhdHVzOiA1MDAsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfHwgZXJyb3IucmVhc29uIH07XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnNpZ25lcl0pO1xuXG4gIC8vIEdldCBhY2NvdW50IGRhdGEgKGNvbGxhdGVyYWwsIGRlYnQsIGhlYWx0aCBmYWN0b3IpXG4gIGNvbnN0IGdldEFjY291bnREYXRhID0gdXNlQ2FsbGJhY2soYXN5bmMgKHVzZXIpID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFtZXRhbWFza0RldGFpbHMucHJvdmlkZXIpIHJldHVybiBudWxsO1xuXG4gICAgICBjb25zdCBwb29sID0gbmV3IGV0aGVycy5Db250cmFjdChMZW5kaW5nUG9vbEFkZHJlc3MsIExlbmRpbmdQb29sQUJJLmFiaSwgbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyKTtcbiAgICAgIGNvbnN0IHdhbGxldCA9IHVzZXIgfHwgbWV0YW1hc2tEZXRhaWxzLmN1cnJlbnRBY2NvdW50IHx8IGV0aGVycy5aZXJvQWRkcmVzcztcbiAgICAgIFxuICAgICAgLy8gQWRkIGVycm9yIGhhbmRsaW5nIGZvciBlbXB0eSByZXNwb25zZVxuICAgICAgbGV0IGNvbCwgZGVidCwgaGY7XG4gICAgICB0cnkge1xuICAgICAgICBbY29sLCBkZWJ0LCBoZl0gPSBhd2FpdCBwb29sLmdldEFjY291bnREYXRhKHdhbGxldCk7XG4gICAgICB9IGNhdGNoIChjb250cmFjdEVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdDb250cmFjdCBnZXRBY2NvdW50RGF0YSBmYWlsZWQsIHVzaW5nIGRlZmF1bHRzOicsIGNvbnRyYWN0RXJyb3IubWVzc2FnZSk7XG4gICAgICAgIC8vIFJldHVybiBkZWZhdWx0IHZhbHVlcyBmb3IgbmV3IHVzZXJzXG4gICAgICAgIGNvbCA9IGV0aGVycy5wYXJzZVVuaXRzKFwiMFwiLCAxOCk7XG4gICAgICAgIGRlYnQgPSBldGhlcnMucGFyc2VVbml0cyhcIjBcIiwgMTgpO1xuICAgICAgICBoZiA9IGV0aGVycy5wYXJzZVVuaXRzKFwiMTE1NzkyMDg5MjM3MzE2MTk1NDIzNTcwOTg1MDA4Njg3OTA3ODUzMjY5OTg0NjY1NjQwNTY0MDM5NDU3LjU4NDAwNzkxMzEyOTYzOTkzNVwiLCAxOCk7IC8vIE1heCB1aW50MjU2XG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnN0IGFjY291bnREYXRhID0ge1xuICAgICAgICBjb2xsYXRlcmFsVVNEOiBldGhlcnMuZm9ybWF0VW5pdHMoY29sLCAxOCksXG4gICAgICAgIGRlYnRVU0Q6IGV0aGVycy5mb3JtYXRVbml0cyhkZWJ0LCAxOCksXG4gICAgICAgIGhlYWx0aEZhY3RvcjogZXRoZXJzLmZvcm1hdFVuaXRzKGhmLCAxOClcbiAgICAgIH07XG5cbiAgICAgIHNldEFjY291bnREYXRhKGFjY291bnREYXRhKTtcbiAgICAgIHJldHVybiBhY2NvdW50RGF0YTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coJ2dldEFjY291bnREYXRhIGVycm9yLCB1c2luZyBkZWZhdWx0czonLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgIC8vIFJldHVybiBkZWZhdWx0IHZhbHVlcyBvbiBhbnkgZXJyb3JcbiAgICAgIGNvbnN0IGFjY291bnREYXRhID0ge1xuICAgICAgICBjb2xsYXRlcmFsVVNEOiBcIjBcIixcbiAgICAgICAgZGVidFVTRDogXCIwXCIsIFxuICAgICAgICBoZWFsdGhGYWN0b3I6IFwiMTE1NzkyMDg5MjM3MzE2MTk1NDIzNTcwOTg1MDA4Njg3OTA3ODUzMjY5OTg0NjY1NjQwNTY0MDM5NDU3LjU4NDAwNzkxMzEyOTYzOTkzNVwiXG4gICAgICB9O1xuICAgICAgc2V0QWNjb3VudERhdGEoYWNjb3VudERhdGEpO1xuICAgICAgcmV0dXJuIGFjY291bnREYXRhO1xuICAgIH1cbiAgfSwgW21ldGFtYXNrRGV0YWlscy5wcm92aWRlciwgbWV0YW1hc2tEZXRhaWxzLmN1cnJlbnRBY2NvdW50XSk7XG5cbiAgLy8gR2V0IHlvdXIgc3VwcGxpZXNcbiAgY29uc3QgZ2V0WW91clN1cHBsaWVzID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiMy4gR2V0dGluZyB5b3VyIHN1cHBsaWVzLi4uXCIpO1xuICAgIHRyeSB7XG4gICAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5wcm92aWRlciB8fCAhbWV0YW1hc2tEZXRhaWxzLmN1cnJlbnRBY2NvdW50KSByZXR1cm4gW107XG5cbiAgICAgIGNvbnN0IGFiaSA9IFtcbiAgICAgICAgJ2Z1bmN0aW9uIGdldFVzZXJSZXNlcnZlKGFkZHJlc3MgdXNlciwgYWRkcmVzcyBhc3NldCkgdmlldyByZXR1cm5zICh0dXBsZSh1aW50MTI4IHByaW5jaXBhbCx1aW50MTI4IGluZGV4KSBzdXBwbHksIHR1cGxlKHVpbnQxMjggcHJpbmNpcGFsLHVpbnQxMjggaW5kZXgpIGJvcnJvdyknXG4gICAgICBdO1xuICAgICAgY29uc3QgcG9vbCA9IG5ldyBldGhlcnMuQ29udHJhY3QoQ09ORklHLkxFTkRJTkdfUE9PTCwgYWJpLCBtZXRhbWFza0RldGFpbHMucHJvdmlkZXIpO1xuXG4gICAgICBjb25zdCBzdXBwbGllcyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICBDT05GSUcuVE9LRU5TLmZpbHRlcih0ID0+ICF0LmlzTmF0aXZlKS5tYXAoYXN5bmMgKHRva2VuKSA9PiB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHVzZXJSZXNlcnZlID0gYXdhaXQgcG9vbC5nZXRVc2VyUmVzZXJ2ZShtZXRhbWFza0RldGFpbHMuY3VycmVudEFjY291bnQsIHRva2VuLmFkZHJlc3MpO1xuICAgICAgICAgICAgY29uc3Qgc3VwcGx5UHJpbmNpcGFsID0gZXRoZXJzLmZvcm1hdFVuaXRzKHVzZXJSZXNlcnZlLnN1cHBseS5wcmluY2lwYWwsIDE4KTtcbiAgICAgICAgICAgIGNvbnN0IHN1cHBseUluZGV4ID0gdXNlclJlc2VydmUuc3VwcGx5LmluZGV4LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChwYXJzZUZsb2F0KHN1cHBseVByaW5jaXBhbCkgPiAwKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHByaWNlID0gYXdhaXQgZ2V0UHJpY2VVU0QodG9rZW4uYWRkcmVzcyk7XG4gICAgICAgICAgICAgIGNvbnN0IGJhbGFuY2VVU0QgPSBwYXJzZUZsb2F0KHN1cHBseVByaW5jaXBhbCkgKiBwYXJzZUZsb2F0KHByaWNlKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogdG9rZW4uYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBzeW1ib2w6IHRva2VuLnN5bWJvbCxcbiAgICAgICAgICAgICAgICBuYW1lOiB0b2tlbi5uYW1lLFxuICAgICAgICAgICAgICAgIGRlY2ltYWxzOiB0b2tlbi5kZWNpbWFscyxcbiAgICAgICAgICAgICAgICBzdXBwbHlQcmluY2lwYWw6IHN1cHBseVByaW5jaXBhbCxcbiAgICAgICAgICAgICAgICBzdXBwbHlJbmRleDogc3VwcGx5SW5kZXgsXG4gICAgICAgICAgICAgICAgYmFsYW5jZVVTRDogYmFsYW5jZVVTRCxcbiAgICAgICAgICAgICAgICBwcmljZVVTRDogcHJpY2UsXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGBFcnJvciBnZXR0aW5nIHN1cHBseSBmb3IgJHt0b2tlbi5zeW1ib2x9OmAsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHZhbGlkU3VwcGxpZXMgPSBzdXBwbGllcy5maWx0ZXIocyA9PiBzICE9PSBudWxsKTtcbiAgICAgIHNldFN1cHBseUFzc2V0cyh2YWxpZFN1cHBsaWVzKTtcblxuICAgICAgLy8gQ2FsY3VsYXRlIHN1bW1hcnlcbiAgICAgIGNvbnN0IHRvdGFsVVNEQmFsYW5jZSA9IHZhbGlkU3VwcGxpZXMucmVkdWNlKChzdW0sIGFzc2V0KSA9PiBzdW0gKyBhc3NldC5iYWxhbmNlVVNELCAwKTtcbiAgICAgIGNvbnN0IHdlaWdodGVkQXZnQVBZID0gdmFsaWRTdXBwbGllcy5sZW5ndGggPiAwID8gXG4gICAgICAgIHZhbGlkU3VwcGxpZXMucmVkdWNlKChzdW0sIGFzc2V0KSA9PiBzdW0gKyAoYXNzZXQuYXB5IHx8IDApLCAwKSAvIHZhbGlkU3VwcGxpZXMubGVuZ3RoIDogMDtcbiAgICAgIGNvbnN0IHRvdGFsVVNEQ29sbGF0ZXJhbCA9IHZhbGlkU3VwcGxpZXMucmVkdWNlKChzdW0sIGFzc2V0KSA9PiBzdW0gKyBhc3NldC5iYWxhbmNlVVNELCAwKTtcblxuICAgICAgc2V0U3VwcGx5U3VtbWFyeSh7XG4gICAgICAgIHRvdGFsVVNEQmFsYW5jZSxcbiAgICAgICAgd2VpZ2h0ZWRBdmdBUFksXG4gICAgICAgIHRvdGFsVVNEQ29sbGF0ZXJhbCxcbiAgICAgIH0pO1xuXG4gICAgICBjb25zb2xlLmxvZyhcIkdvdCB5b3VyIHN1cHBsaWVzOlwiLCB2YWxpZFN1cHBsaWVzKTtcbiAgICAgIHJldHVybiB2YWxpZFN1cHBsaWVzO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyLCBtZXRhbWFza0RldGFpbHMuY3VycmVudEFjY291bnQsIGdldFByaWNlVVNEXSk7XG5cbiAgLy8gR2V0IHlvdXIgYm9ycm93c1xuICBjb25zdCBnZXRZb3VyQm9ycm93cyA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIjQuIEdldHRpbmcgeW91ciBib3Jyb3dzLi4uXCIpO1xuICAgIHRyeSB7XG4gICAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5wcm92aWRlciB8fCAhbWV0YW1hc2tEZXRhaWxzLmN1cnJlbnRBY2NvdW50KSByZXR1cm4gW107XG5cbiAgICAgIGNvbnN0IGFiaSA9IFtcbiAgICAgICAgJ2Z1bmN0aW9uIGdldFVzZXJSZXNlcnZlKGFkZHJlc3MgdXNlciwgYWRkcmVzcyBhc3NldCkgdmlldyByZXR1cm5zICh0dXBsZSh1aW50MTI4IHByaW5jaXBhbCx1aW50MTI4IGluZGV4KSBzdXBwbHksIHR1cGxlKHVpbnQxMjggcHJpbmNpcGFsLHVpbnQxMjggaW5kZXgpIGJvcnJvdyknXG4gICAgICBdO1xuICAgICAgY29uc3QgcG9vbCA9IG5ldyBldGhlcnMuQ29udHJhY3QoQ09ORklHLkxFTkRJTkdfUE9PTCwgYWJpLCBtZXRhbWFza0RldGFpbHMucHJvdmlkZXIpO1xuXG4gICAgICBjb25zdCBib3Jyb3dzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICAgIENPTkZJRy5UT0tFTlMuZmlsdGVyKHQgPT4gIXQuaXNOYXRpdmUpLm1hcChhc3luYyAodG9rZW4pID0+IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXNlclJlc2VydmUgPSBhd2FpdCBwb29sLmdldFVzZXJSZXNlcnZlKG1ldGFtYXNrRGV0YWlscy5jdXJyZW50QWNjb3VudCwgdG9rZW4uYWRkcmVzcyk7XG4gICAgICAgICAgICBjb25zdCBib3Jyb3dQcmluY2lwYWwgPSBldGhlcnMuZm9ybWF0VW5pdHModXNlclJlc2VydmUuYm9ycm93LnByaW5jaXBhbCwgMTgpO1xuICAgICAgICAgICAgY29uc3QgYm9ycm93SW5kZXggPSB1c2VyUmVzZXJ2ZS5ib3Jyb3cuaW5kZXgudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHBhcnNlRmxvYXQoYm9ycm93UHJpbmNpcGFsKSA+IDApIHtcbiAgICAgICAgICAgICAgY29uc3QgcHJpY2UgPSBhd2FpdCBnZXRQcmljZVVTRCh0b2tlbi5hZGRyZXNzKTtcbiAgICAgICAgICAgICAgY29uc3QgYmFsYW5jZVVTRCA9IHBhcnNlRmxvYXQoYm9ycm93UHJpbmNpcGFsKSAqIHBhcnNlRmxvYXQocHJpY2UpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0b2tlbi5hZGRyZXNzLFxuICAgICAgICAgICAgICAgIHN5bWJvbDogdG9rZW4uc3ltYm9sLFxuICAgICAgICAgICAgICAgIG5hbWU6IHRva2VuLm5hbWUsXG4gICAgICAgICAgICAgICAgZGVjaW1hbHM6IHRva2VuLmRlY2ltYWxzLFxuICAgICAgICAgICAgICAgIGJvcnJvd1ByaW5jaXBhbDogYm9ycm93UHJpbmNpcGFsLFxuICAgICAgICAgICAgICAgIGJvcnJvd0luZGV4OiBib3Jyb3dJbmRleCxcbiAgICAgICAgICAgICAgICBiYWxhbmNlVVNEOiBiYWxhbmNlVVNELFxuICAgICAgICAgICAgICAgIHByaWNlVVNEOiBwcmljZSxcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYEVycm9yIGdldHRpbmcgYm9ycm93IGZvciAke3Rva2VuLnN5bWJvbH06YCwgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgKTtcblxuICAgICAgY29uc3QgdmFsaWRCb3Jyb3dzID0gYm9ycm93cy5maWx0ZXIoYiA9PiBiICE9PSBudWxsKTtcbiAgICAgIHNldFlvdXJCb3Jyb3dzKHZhbGlkQm9ycm93cyk7XG5cbiAgICAgIC8vIENhbGN1bGF0ZSBzdW1tYXJ5XG4gICAgICBjb25zdCB0b3RhbFVTREJhbGFuY2UgPSB2YWxpZEJvcnJvd3MucmVkdWNlKChzdW0sIGFzc2V0KSA9PiBzdW0gKyBhc3NldC5iYWxhbmNlVVNELCAwKTtcbiAgICAgIGNvbnN0IHdlaWdodGVkQXZnQVBZID0gdmFsaWRCb3Jyb3dzLmxlbmd0aCA+IDAgPyBcbiAgICAgICAgdmFsaWRCb3Jyb3dzLnJlZHVjZSgoc3VtLCBhc3NldCkgPT4gc3VtICsgKGFzc2V0LmFweSB8fCAwKSwgMCkgLyB2YWxpZEJvcnJvd3MubGVuZ3RoIDogMDtcbiAgICAgIGNvbnN0IHRvdGFsQm9ycm93UG93ZXJVc2VkID0gdG90YWxVU0RCYWxhbmNlO1xuXG4gICAgICBzZXRCb3Jyb3dTdW1tYXJ5KHtcbiAgICAgICAgdG90YWxVU0RCYWxhbmNlLFxuICAgICAgICB3ZWlnaHRlZEF2Z0FQWSxcbiAgICAgICAgdG90YWxCb3Jyb3dQb3dlclVzZWQsXG4gICAgICB9KTtcblxuICAgICAgY29uc29sZS5sb2coXCJHb3QgeW91ciBib3Jyb3dzOlwiLCB2YWxpZEJvcnJvd3MpO1xuICAgICAgcmV0dXJuIHZhbGlkQm9ycm93cztcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgfSwgW21ldGFtYXNrRGV0YWlscy5wcm92aWRlciwgbWV0YW1hc2tEZXRhaWxzLmN1cnJlbnRBY2NvdW50LCBnZXRQcmljZVVTRF0pO1xuXG4gIC8vIEdldCBhc3NldHMgdG8gYm9ycm93XG4gIGNvbnN0IGdldEFzc2V0c1RvQm9ycm93ID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiNS4gR2V0dGluZyBhc3NldHMgdG8gYm9ycm93Li4uXCIpO1xuICAgIHRyeSB7XG4gICAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5wcm92aWRlcikgcmV0dXJuIFtdO1xuXG4gICAgICBjb25zdCBhYmkgPSBbXG4gICAgICAgICdmdW5jdGlvbiByZXNlcnZlcyhhZGRyZXNzKSB2aWV3IHJldHVybnMgKHVpbnQxMjggcmVzZXJ2ZUNhc2gsIHVpbnQxMjggdG90YWxEZWJ0UHJpbmNpcGFsLCB1aW50MTI4IGxpcXVpZGl0eUluZGV4LCB1aW50MTI4IHZhcmlhYmxlQm9ycm93SW5kZXgsIHVpbnQ2NCBsaXF1aWRpdHlSYXRlUmF5UGVyU2VjLCB1aW50NjQgdmFyaWFibGVCb3Jyb3dSYXRlUmF5UGVyU2VjLCB1aW50MTYgcmVzZXJ2ZUZhY3RvckJwcywgdWludDE2IGx0dkJwcywgdWludDE2IGxpcVRocmVzaG9sZEJwcywgdWludDE2IGxpcUJvbnVzQnBzLCB1aW50MTYgY2xvc2VGYWN0b3JCcHMsIHVpbnQ4IGRlY2ltYWxzLCBib29sIGlzQm9ycm93YWJsZSwgdWludDE2IG9wdGltYWxVQnBzLCB1aW50NjQgYmFzZVJhdGVSYXlQZXJTZWMsIHVpbnQ2NCBzbG9wZTFSYXlQZXJTZWMsIHVpbnQ2NCBzbG9wZTJSYXlQZXJTZWMsIHVpbnQ0MCBsYXN0VXBkYXRlKSdcbiAgICAgIF07XG4gICAgICBjb25zdCBwb29sID0gbmV3IGV0aGVycy5Db250cmFjdChDT05GSUcuTEVORElOR19QT09MLCBhYmksIG1ldGFtYXNrRGV0YWlscy5wcm92aWRlcik7XG5cbiAgICAgIGNvbnN0IGFzc2V0cyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICBDT05GSUcuVE9LRU5TLmZpbHRlcih0ID0+ICF0LmlzTmF0aXZlKS5tYXAoYXN5bmMgKHRva2VuKSA9PiB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc2VydmUgPSBhd2FpdCBwb29sLnJlc2VydmVzKHRva2VuLmFkZHJlc3MpO1xuICAgICAgICAgICAgY29uc3QgaXNCb3Jyb3dhYmxlID0gQm9vbGVhbihyZXNlcnZlLmlzQm9ycm93YWJsZSk7XG4gICAgICAgICAgICBjb25zdCByZXNlcnZlQ2FzaCA9IGV0aGVycy5mb3JtYXRVbml0cyhyZXNlcnZlLnJlc2VydmVDYXNoLCAxOCk7XG4gICAgICAgICAgICBjb25zdCBwcmljZSA9IGF3YWl0IGdldFByaWNlVVNEKHRva2VuLmFkZHJlc3MpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoaXNCb3Jyb3dhYmxlICYmIHBhcnNlRmxvYXQocmVzZXJ2ZUNhc2gpID4gMCkge1xuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRva2VuLmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgc3ltYm9sOiB0b2tlbi5zeW1ib2wsXG4gICAgICAgICAgICAgICAgbmFtZTogdG9rZW4ubmFtZSxcbiAgICAgICAgICAgICAgICBkZWNpbWFsczogdG9rZW4uZGVjaW1hbHMsXG4gICAgICAgICAgICAgICAgcmVzZXJ2ZUNhc2g6IHJlc2VydmVDYXNoLFxuICAgICAgICAgICAgICAgIGlzQm9ycm93YWJsZTogaXNCb3Jyb3dhYmxlLFxuICAgICAgICAgICAgICAgIHByaWNlVVNEOiBwcmljZSxcbiAgICAgICAgICAgICAgICBsdHZCcHM6IE51bWJlcihyZXNlcnZlLmx0dkJwcyksXG4gICAgICAgICAgICAgICAgbGlxVGhyZXNob2xkQnBzOiBOdW1iZXIocmVzZXJ2ZS5saXFUaHJlc2hvbGRCcHMpLFxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgRXJyb3IgZ2V0dGluZyBib3Jyb3cgYXNzZXQgJHt0b2tlbi5zeW1ib2x9OmAsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHZhbGlkQXNzZXRzID0gYXNzZXRzLmZpbHRlcihhID0+IGEgIT09IG51bGwpO1xuICAgICAgc2V0QXNzZXRzVG9Cb3Jyb3codmFsaWRBc3NldHMpO1xuICAgICAgY29uc29sZS5sb2coXCJHb3QgYXNzZXRzIHRvIGJvcnJvdzpcIiwgdmFsaWRBc3NldHMpO1xuICAgICAgcmV0dXJuIHZhbGlkQXNzZXRzO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyLCBnZXRQcmljZVVTRF0pO1xuXG4gIC8vIFdyYXAgRVRIIHRvIFdFVEhcbiAgY29uc3Qgd3JhcEV0aCA9IHVzZUNhbGxiYWNrKGFzeW5jIChhbW91bnRFdGgpID0+IHtcbiAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5zaWduZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHNpZ25lciBhdmFpbGFibGVcIik7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGRhdGEgPSAnMHhkMGUzMGRiMCc7IC8vIGRlcG9zaXQoKVxuICAgICAgY29uc29sZS5sb2coJ3dyYXBFdGgg4oaSIHVzaW5nIFdFVEggYWRkcmVzczonLCBXRVRIQWRkcmVzcyk7XG4gICAgICBjb25zdCB0eCA9IGF3YWl0IG1ldGFtYXNrRGV0YWlscy5zaWduZXIuc2VuZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgdG86IFdFVEhBZGRyZXNzLFxuICAgICAgICB2YWx1ZTogZXRoZXJzLnBhcnNlRXRoZXIoYW1vdW50RXRoKSxcbiAgICAgICAgZGF0YVxuICAgICAgfSk7XG4gICAgICBhd2FpdCB0eC53YWl0KCk7XG4gICAgICBjb25zb2xlLmxvZyhcIkVUSCB3cmFwcGVkIHRvIFdFVEg6XCIsIGFtb3VudEV0aCk7XG4gICAgICByZXR1cm4geyBzdGF0dXM6IDIwMCwgbWVzc2FnZTogXCJUcmFuc2FjdGlvbiBTdWNjZXNzZnVsLi4uXCIsIGhhc2g6IHR4Lmhhc2ggfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuIHsgc3RhdHVzOiA1MDAsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfHwgZXJyb3IucmVhc29uIH07XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnNpZ25lcl0pO1xuXG4gIC8vIFVud3JhcCBXRVRIIHRvIEVUSFxuICBjb25zdCB1bndyYXBXZXRoID0gdXNlQ2FsbGJhY2soYXN5bmMgKGFtb3VudEV0aCkgPT4ge1xuICAgIGlmICghbWV0YW1hc2tEZXRhaWxzLnNpZ25lcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gc2lnbmVyIGF2YWlsYWJsZVwiKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgYWJpID0gWydmdW5jdGlvbiB3aXRoZHJhdyh1aW50MjU2IHdhZCknXTtcbiAgICAgIGNvbnNvbGUubG9nKCd1bndyYXBXZXRoIOKGkiB1c2luZyBXRVRIIGFkZHJlc3M6JywgV0VUSEFkZHJlc3MpO1xuICAgICAgY29uc3Qgd2V0aCA9IG5ldyBldGhlcnMuQ29udHJhY3QoV0VUSEFkZHJlc3MsIGFiaSwgbWV0YW1hc2tEZXRhaWxzLnNpZ25lcik7XG4gICAgICBjb25zdCB0eCA9IGF3YWl0IHdldGgud2l0aGRyYXcoZXRoZXJzLnBhcnNlRXRoZXIoYW1vdW50RXRoKSk7XG4gICAgICBhd2FpdCB0eC53YWl0KCk7XG4gICAgICBjb25zb2xlLmxvZyhcIldFVEggdW53cmFwcGVkIHRvIEVUSDpcIiwgYW1vdW50RXRoKTtcbiAgICAgIHJldHVybiB7IHN0YXR1czogMjAwLCBtZXNzYWdlOiBcIlRyYW5zYWN0aW9uIFN1Y2Nlc3NmdWwuLi5cIiwgaGFzaDogdHguaGFzaCB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4geyBzdGF0dXM6IDUwMCwgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB8fCBlcnJvci5yZWFzb24gfTtcbiAgICB9XG4gIH0sIFttZXRhbWFza0RldGFpbHMuc2lnbmVyXSk7XG5cbiAgLy8gV2l0aGRyYXcgdG9rZW4gdG8gRVRIIChmb3IgYWxsIHRva2VucyB3aXRoIHdpdGhkcmF3IGZ1bmN0aW9uKVxuICBjb25zdCB3aXRoZHJhd1Rva2VuID0gdXNlQ2FsbGJhY2soYXN5bmMgKHRva2VuQWRkcmVzcywgYW1vdW50KSA9PiB7XG4gICAgaWYgKCFtZXRhbWFza0RldGFpbHMuc2lnbmVyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzaWduZXIgYXZhaWxhYmxlXCIpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBhYmkgPSBbJ2Z1bmN0aW9uIHdpdGhkcmF3KHVpbnQyNTYgYW1vdW50KSddO1xuICAgICAgY29uc29sZS5sb2coJ3dpdGhkcmF3VG9rZW4g4oaSIHVzaW5nIGFkZHJlc3M6JywgdG9rZW5BZGRyZXNzKTtcbiAgICAgIGNvbnN0IHRva2VuID0gbmV3IGV0aGVycy5Db250cmFjdCh0b2tlbkFkZHJlc3MsIGFiaSwgbWV0YW1hc2tEZXRhaWxzLnNpZ25lcik7XG4gICAgICBjb25zdCB0eCA9IGF3YWl0IHRva2VuLndpdGhkcmF3KGV0aGVycy5wYXJzZUV0aGVyKGFtb3VudCkpO1xuICAgICAgYXdhaXQgdHgud2FpdCgpO1xuICAgICAgY29uc29sZS5sb2coXCJUb2tlbiB3aXRoZHJhd24gdG8gRVRIOlwiLCBhbW91bnQpO1xuICAgICAgcmV0dXJuIHsgc3RhdHVzOiAyMDAsIG1lc3NhZ2U6IFwiV2l0aGRyYXcgU3VjY2Vzc2Z1bC4uLlwiLCBoYXNoOiB0eC5oYXNoIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgIHJldHVybiB7IHN0YXR1czogNTAwLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIHx8IGVycm9yLnJlYXNvbiB9O1xuICAgIH1cbiAgfSwgW21ldGFtYXNrRGV0YWlscy5zaWduZXJdKTtcblxuICAvLyBEZXBvc2l0IEVUSCB0byBnZXQgdG9rZW4gKGZvciBhbGwgdG9rZW5zIHdpdGggZGVwb3NpdCBmdW5jdGlvbilcbiAgY29uc3QgZGVwb3NpdFRvVG9rZW4gPSB1c2VDYWxsYmFjayhhc3luYyAodG9rZW5BZGRyZXNzLCBhbW91bnRFdGgpID0+IHtcbiAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5zaWduZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHNpZ25lciBhdmFpbGFibGVcIik7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFiaSA9IFsnZnVuY3Rpb24gZGVwb3NpdCgpIHBheWFibGUnXTtcbiAgICAgIGNvbnNvbGUubG9nKCdkZXBvc2l0VG9Ub2tlbiDihpIgdXNpbmcgYWRkcmVzczonLCB0b2tlbkFkZHJlc3MpO1xuICAgICAgY29uc3QgdG9rZW4gPSBuZXcgZXRoZXJzLkNvbnRyYWN0KHRva2VuQWRkcmVzcywgYWJpLCBtZXRhbWFza0RldGFpbHMuc2lnbmVyKTtcbiAgICAgIGNvbnN0IHR4ID0gYXdhaXQgdG9rZW4uZGVwb3NpdCh7IHZhbHVlOiBldGhlcnMucGFyc2VFdGhlcihhbW91bnRFdGgpIH0pO1xuICAgICAgYXdhaXQgdHgud2FpdCgpO1xuICAgICAgY29uc29sZS5sb2coXCJFVEggZGVwb3NpdGVkIHRvIHRva2VuOlwiLCBhbW91bnRFdGgpO1xuICAgICAgcmV0dXJuIHsgc3RhdHVzOiAyMDAsIG1lc3NhZ2U6IFwiRGVwb3NpdCBTdWNjZXNzZnVsLi4uXCIsIGhhc2g6IHR4Lmhhc2ggfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgICAgcmV0dXJuIHsgc3RhdHVzOiA1MDAsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfHwgZXJyb3IucmVhc29uIH07XG4gICAgfVxuICB9LCBbbWV0YW1hc2tEZXRhaWxzLnNpZ25lcl0pO1xuXG4gIC8vIFJlZnJlc2ggYWxsIGRhdGFcbiAgY29uc3QgcmVmcmVzaCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBnZXRVc2VyQXNzZXRzKCksXG4gICAgICAgIGdldFlvdXJTdXBwbGllcygpLFxuICAgICAgICBnZXRZb3VyQm9ycm93cygpLFxuICAgICAgICBnZXRBc3NldHNUb0JvcnJvdygpLFxuICAgICAgICBnZXRBY2NvdW50RGF0YSgpLFxuICAgICAgXSk7XG4gICAgICBjb25zb2xlLmxvZyhcIkFsbCBkYXRhIHJlZnJlc2hlZFwiKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVwb3J0RXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgfSwgW2dldFVzZXJBc3NldHMsIGdldFlvdXJTdXBwbGllcywgZ2V0WW91ckJvcnJvd3MsIGdldEFzc2V0c1RvQm9ycm93LCBnZXRBY2NvdW50RGF0YV0pO1xuXG4gIC8vIFVwZGF0ZSBpbnRlcmVzdHMgKGFjY3J1ZSlcbiAgY29uc3QgdXBkYXRlSW50ZXJlc3RzID0gdXNlQ2FsbGJhY2soYXN5bmMgKGFzc2V0KSA9PiB7XG4gICAgaWYgKCFtZXRhbWFza0RldGFpbHMuc2lnbmVyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzaWduZXIgYXZhaWxhYmxlXCIpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBhYmkgPSBbJ2Z1bmN0aW9uIGFjY3J1ZVB1YmxpYyhhZGRyZXNzIGFzc2V0KSddO1xuICAgICAgY29uc3QgcG9vbCA9IG5ldyBldGhlcnMuQ29udHJhY3QoQ09ORklHLkxFTkRJTkdfUE9PTCwgYWJpLCBtZXRhbWFza0RldGFpbHMuc2lnbmVyKTtcbiAgICAgIGNvbnN0IHR4ID0gYXdhaXQgcG9vbC5hY2NydWVQdWJsaWMoYXNzZXQpO1xuICAgICAgYXdhaXQgdHgud2FpdCgpO1xuICAgICAgY29uc29sZS5sb2coXCJJbnRlcmVzdHMgdXBkYXRlZCBmb3IgYXNzZXQ6XCIsIGFzc2V0KTtcbiAgICAgIHJldHVybiB7IHN0YXR1czogMjAwLCBtZXNzYWdlOiBcIlRyYW5zYWN0aW9uIFN1Y2Nlc3NmdWwuLi5cIiB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4geyBzdGF0dXM6IDUwMCwgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB8fCBlcnJvci5yZWFzb24gfTtcbiAgICB9XG4gIH0sIFttZXRhbWFza0RldGFpbHMuc2lnbmVyXSk7XG5cbiAgLy8gR2V0IHVzZXIgdG90YWwgYXZhaWxhYmxlIGJhbGFuY2VcbiAgY29uc3QgZ2V0VXNlclRvdGFsQXZhaWxhYmxlQmFsYW5jZSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFtZXRhbWFza0RldGFpbHMucHJvdmlkZXIgfHwgIW1ldGFtYXNrRGV0YWlscy5jdXJyZW50QWNjb3VudCkgcmV0dXJuIDA7XG5cbiAgICAgIGNvbnN0IGFiaSA9IFtcbiAgICAgICAgJ2Z1bmN0aW9uIGdldFVzZXJUb3RhbEF2YWlsYWJsZUJhbGFuY2VJblVTRChhZGRyZXNzIHVzZXIsIHVpbnQyNTYgYXNzZXRUeXBlKSB2aWV3IHJldHVybnMgKHVpbnQyNTYpJ1xuICAgICAgXTtcbiAgICAgIGNvbnN0IHBvb2wgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KENPTkZJRy5MRU5ESU5HX1BPT0wsIGFiaSwgbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyKTtcbiAgICAgIGNvbnN0IG1heEFtb3VudCA9IGF3YWl0IHBvb2wuZ2V0VXNlclRvdGFsQXZhaWxhYmxlQmFsYW5jZUluVVNEKG1ldGFtYXNrRGV0YWlscy5jdXJyZW50QWNjb3VudCwgMSk7XG4gICAgICByZXR1cm4gTnVtYmVyKGV0aGVycy5mb3JtYXRVbml0cyhtYXhBbW91bnQsIDE4KSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJlcG9ydEVycm9yKGVycm9yKTtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgfSwgW21ldGFtYXNrRGV0YWlscy5wcm92aWRlciwgbWV0YW1hc2tEZXRhaWxzLmN1cnJlbnRBY2NvdW50XSk7XG5cbiAgLy8gR2V0IHRva2VucyBwZXIgVVNEIGFtb3VudFxuICBjb25zdCBnZXRUb2tlbnNQZXJVU0RBbW91bnQgPSB1c2VDYWxsYmFjayhhc3luYyAodG9rZW4sIGFtb3VudCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIW1ldGFtYXNrRGV0YWlscy5wcm92aWRlcikgcmV0dXJuIDA7XG5cbiAgICAgIGNvbnN0IGFiaSA9IFtcbiAgICAgICAgJ2Z1bmN0aW9uIGdldFRva2Vuc1BlclVTREFtb3VudChhZGRyZXNzIHRva2VuLCB1aW50MjU2IGFtb3VudCkgdmlldyByZXR1cm5zICh1aW50MjU2KSdcbiAgICAgIF07XG4gICAgICBjb25zdCBoZWxwZXIgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KENPTkZJRy5QUklDRV9PUkFDTEUsIGFiaSwgbWV0YW1hc2tEZXRhaWxzLnByb3ZpZGVyKTtcbiAgICAgIGNvbnN0IG1heFF0eSA9IGF3YWl0IGhlbHBlci5nZXRUb2tlbnNQZXJVU0RBbW91bnQodG9rZW4sIGV0aGVycy5wYXJzZVVuaXRzKGFtb3VudC50b1N0cmluZygpLCAxOCkpO1xuICAgICAgcmV0dXJuIE51bWJlcihldGhlcnMuZm9ybWF0VW5pdHMobWF4UXR5LCAxOCkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXBvcnRFcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG4gIH0sIFttZXRhbWFza0RldGFpbHMucHJvdmlkZXJdKTtcblxuICAvLyBPYmplY3RpZnkgc3VwcGxpZWQgYXNzZXRzIChmb3JtYXQgZGF0YSlcbiAgY29uc3Qgb2JqZWN0aWZ5U3VwcGxpZWRBc3NldHMgPSB1c2VDYWxsYmFjayhhc3luYyAoYXNzZXRzKSA9PiB7XG4gICAgY29uc3QgYXNzZXRzTGlzdCA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXNzZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCB0b2tlbiA9IGFzc2V0c1tpXS50b2tlbjtcbiAgICAgIGxldCBsZW5kUXR5ID0gYXNzZXRzW2ldLmxlbnRRdHk7XG5cbiAgICAgIGNvbnN0IGFtb3VudEluVVNEID0gYXdhaXQgZ2V0QW1vdW50SW5VU0QodG9rZW4sIGxlbmRRdHkpO1xuICAgICAgbGVuZFF0eSA9IE51bWJlcihhc3NldHNbaV0ubGVudFF0eSkgLyAxZTE4O1xuXG4gICAgICBjb25zdCBtYXhTdXBwbHlBbW91bnQgPSBhd2FpdCBnZXRVc2VyVG90YWxBdmFpbGFibGVCYWxhbmNlKCk7XG4gICAgICBjb25zdCBtYXhRdHkgPSBhd2FpdCBnZXRUb2tlbnNQZXJVU0RBbW91bnQodG9rZW4sIG1heFN1cHBseUFtb3VudCk7XG4gICAgICBjb25zdCBxdHkgPSBsZW5kUXR5IDw9IG1heFF0eSA/IGxlbmRRdHkgOiBtYXhRdHk7XG5cbiAgICAgIGFzc2V0c0xpc3QucHVzaCh7XG4gICAgICAgIHRva2VuOiBhc3NldHNbaV0udG9rZW4sXG4gICAgICAgIGJhbGFuY2U6IGxlbmRRdHksXG4gICAgICAgIGFweTogTnVtYmVyKGFzc2V0c1tpXS5sZW50QXB5KSxcbiAgICAgICAgYmFsYW5jZUluVVNEOiBhbW91bnRJblVTRCxcbiAgICAgICAgbWF4U3VwcGx5OiBxdHksXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGFzc2V0c0xpc3Q7XG4gIH0sIFtnZXRBbW91bnRJblVTRCwgZ2V0VXNlclRvdGFsQXZhaWxhYmxlQmFsYW5jZSwgZ2V0VG9rZW5zUGVyVVNEQW1vdW50XSk7XG5cbiAgLy8gT2JqZWN0aWZ5IGJvcnJvd2VkIGFzc2V0cyAoZm9ybWF0IGRhdGEpXG4gIGNvbnN0IG9iamVjdGlmeUJvcnJvd2VkQXNzZXRzID0gdXNlQ2FsbGJhY2soYXN5bmMgKGFzc2V0cykgPT4ge1xuICAgIGNvbnN0IGJvcnJvd3NMaXN0ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhc3NldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHRva2VuID0gYXNzZXRzW2ldLnRva2VuO1xuICAgICAgY29uc3QgYm9ycm93UXR5ID0gYXNzZXRzW2ldLmJvcnJvd1F0eTtcbiAgICAgIGNvbnN0IGJvcnJvd0FweSA9IGFzc2V0c1tpXS5ib3Jyb3dBcHk7XG4gICAgICBjb25zdCBhbW91bnRJblVTRCA9IGF3YWl0IGdldEFtb3VudEluVVNEKHRva2VuLCBib3Jyb3dRdHkpO1xuICAgICAgXG4gICAgICBib3Jyb3dzTGlzdC5wdXNoKHtcbiAgICAgICAgdG9rZW46IHRva2VuLFxuICAgICAgICBib3Jyb3dRdHk6IE51bWJlcihib3Jyb3dRdHkpLFxuICAgICAgICBib3Jyb3dBcHk6IE51bWJlcihib3Jyb3dBcHkpLFxuICAgICAgICBib3Jyb3dlZEJhbEluVVNEOiBhbW91bnRJblVTRCxcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gYm9ycm93c0xpc3Q7XG4gIH0sIFtnZXRBbW91bnRJblVTRF0pO1xuXG4gIC8vIE1lcmdlIG9iamVjdGlmaWVkIGFzc2V0cyB3aXRoIHRva2VuIGluZm9cbiAgY29uc3QgbWVyZ2VPYmplY3RpZmllZEFzc2V0cyA9IHVzZUNhbGxiYWNrKChhc3NldHMpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBDT05GSUcuVE9LRU5TXG4gICAgICAuZmlsdGVyKCh0b2tlbkxpc3QpID0+IHtcbiAgICAgICAgcmV0dXJuIGFzc2V0cy5zb21lKChhc3NldExpc3QpID0+IHtcbiAgICAgICAgICByZXR1cm4gdG9rZW5MaXN0LmFkZHJlc3MudG9Mb3dlckNhc2UoKSA9PT0gYXNzZXRMaXN0LnRva2VuLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5tYXAoKGFzc2V0T2JqKSA9PiAoe1xuICAgICAgICAuLi5hc3NldHMuZmluZCgoaXRlbSkgPT4gaXRlbS50b2tlbi50b0xvd2VyQ2FzZSgpID09PSBhc3NldE9iai5hZGRyZXNzLnRvTG93ZXJDYXNlKCkpLFxuICAgICAgICAuLi5hc3NldE9iaixcbiAgICAgIH0pKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LCBbXSk7XG5cbiAgLy8gQ29udGV4dCB2YWx1ZVxuICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VNZW1vKCgpID0+ICh7XG4gICAgLy8gU3RhdGVcbiAgICBtZXRhbWFza0RldGFpbHMsXG4gICAgdXNlckFzc2V0cyxcbiAgICBzdXBwbHlBc3NldHMsXG4gICAgYXNzZXRzVG9Cb3Jyb3csXG4gICAgeW91ckJvcnJvd3MsXG4gICAgc3VwcGx5U3VtbWFyeSxcbiAgICBib3Jyb3dTdW1tYXJ5LFxuICAgIGFjY291bnREYXRhLFxuICAgIGNvbnRyYWN0LFxuXG4gICAgLy8gV2FsbGV0IGZ1bmN0aW9uc1xuICAgIGNvbm5lY3RXYWxsZXQsXG4gICAgcmVmcmVzaCxcblxuICAgIC8vIEFzc2V0IGZ1bmN0aW9uc1xuICAgIGdldFVzZXJBc3NldHMsXG4gICAgZ2V0WW91clN1cHBsaWVzLFxuICAgIGdldFlvdXJCb3Jyb3dzLFxuICAgIGdldEFzc2V0c1RvQm9ycm93LFxuXG4gICAgLy8gVHJhbnNhY3Rpb24gZnVuY3Rpb25zXG4gICAgQXBwcm92ZVRvQ29udGludWUsXG4gICAgTGVuZEFzc2V0LFxuICAgIFdpdGhkcmF3QXNzZXQsXG4gICAgYm9ycm93QXNzZXQsXG4gICAgcmVwYXlBc3NldCxcblxuICAgIC8vIFV0aWxpdHkgZnVuY3Rpb25zXG4gICAgZ2V0Q29udHJhY3QsXG4gICAgZ2V0UHJpY2VVU0QsXG4gICAgZ2V0QW1vdW50SW5VU0QsXG4gICAgbnVtYmVyVG9FdGhlcnMsXG4gICAgcmVwb3J0RXJyb3IsXG5cbiAgICAvLyBFVEgvV0VUSCBmdW5jdGlvbnNcbiAgICB3cmFwRXRoLFxuICAgIHVud3JhcFdldGgsXG5cbiAgICAvLyBBY2NvdW50IGZ1bmN0aW9uc1xuICAgIGdldEFjY291bnREYXRhLFxuICAgIGdldFVzZXJUb3RhbEF2YWlsYWJsZUJhbGFuY2UsXG4gICAgZ2V0VG9rZW5zUGVyVVNEQW1vdW50LFxuXG4gICAgLy8gRGF0YSBwcm9jZXNzaW5nIGZ1bmN0aW9uc1xuICAgIG9iamVjdGlmeVN1cHBsaWVkQXNzZXRzLFxuICAgIG9iamVjdGlmeUJvcnJvd2VkQXNzZXRzLFxuICAgIG1lcmdlT2JqZWN0aWZpZWRBc3NldHMsXG5cbiAgICAvLyBJbnRlcmVzdCBmdW5jdGlvbnNcbiAgICB1cGRhdGVJbnRlcmVzdHMsXG5cbiAgICAvLyBUb2tlbiB3aXRoZHJhdy9kZXBvc2l0IGZ1bmN0aW9uc1xuICAgIHdpdGhkcmF3VG9rZW4sXG4gICAgZGVwb3NpdFRvVG9rZW4sXG4gIH0pLCBbXG4gICAgbWV0YW1hc2tEZXRhaWxzLFxuICAgIHVzZXJBc3NldHMsXG4gICAgc3VwcGx5QXNzZXRzLFxuICAgIGFzc2V0c1RvQm9ycm93LFxuICAgIHlvdXJCb3Jyb3dzLFxuICAgIHN1cHBseVN1bW1hcnksXG4gICAgYm9ycm93U3VtbWFyeSxcbiAgICBhY2NvdW50RGF0YSxcbiAgICBjb250cmFjdCxcbiAgICBjb25uZWN0V2FsbGV0LFxuICAgIHJlZnJlc2gsXG4gICAgZ2V0VXNlckFzc2V0cyxcbiAgICBnZXRZb3VyU3VwcGxpZXMsXG4gICAgZ2V0WW91ckJvcnJvd3MsXG4gICAgZ2V0QXNzZXRzVG9Cb3Jyb3csXG4gICAgQXBwcm92ZVRvQ29udGludWUsXG4gICAgTGVuZEFzc2V0LFxuICAgIFdpdGhkcmF3QXNzZXQsXG4gICAgYm9ycm93QXNzZXQsXG4gICAgcmVwYXlBc3NldCxcbiAgICBnZXRDb250cmFjdCxcbiAgICBnZXRQcmljZVVTRCxcbiAgICBnZXRBbW91bnRJblVTRCxcbiAgICB3cmFwRXRoLFxuICAgIHVud3JhcFdldGgsXG4gICAgZ2V0QWNjb3VudERhdGEsXG4gICAgZ2V0VXNlclRvdGFsQXZhaWxhYmxlQmFsYW5jZSxcbiAgICBnZXRUb2tlbnNQZXJVU0RBbW91bnQsXG4gICAgb2JqZWN0aWZ5U3VwcGxpZWRBc3NldHMsXG4gICAgb2JqZWN0aWZ5Qm9ycm93ZWRBc3NldHMsXG4gICAgbWVyZ2VPYmplY3RpZmllZEFzc2V0cyxcbiAgICB1cGRhdGVJbnRlcmVzdHMsXG4gIF0pO1xuXG4gIHJldHVybiAoXG4gICAgPGxlbmRDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXtjb250ZXh0VmFsdWV9PlxuICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgIDwvbGVuZENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBMZW5kU3RhdGU7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwidXNlTWVtbyIsImxlbmRDb250ZXh0IiwiZXRoZXJzIiwiQ09ORklHIiwiZ2V0VG9rZW5CYWxhbmNlIiwiZ2V0VG9rZW5BbGxvd2FuY2UiLCJhcHByb3ZlSWZOZWVkZWQiLCJsZW5kIiwibGVuZFR4Iiwid2l0aGRyYXciLCJ3aXRoZHJhd1R4IiwiYm9ycm93IiwiYm9ycm93VHgiLCJyZXBheSIsInJlcGF5VHgiLCJFVEhBZGRyZXNzIiwiTGVuZGluZ1Bvb2xBZGRyZXNzIiwiTGVuZGluZ0hlbHBlckFkZHJlc3MiLCJXRVRIQWRkcmVzcyIsIlRva2VuQUJJIiwiTGVuZGluZ1Bvb2xBQkkiLCJMZW5kaW5nSGVscGVyQUJJIiwibnVtYmVyVG9FdGhlcnMiLCJudW1iZXIiLCJwYXJzZUV0aGVyIiwidG9TdHJpbmciLCJyZXBvcnRFcnJvciIsImVycm9yIiwiY29uc29sZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJMZW5kU3RhdGUiLCJwcm9wcyIsIm1ldGFtYXNrRGV0YWlscyIsInNldE1ldGFtYXNrRGV0YWlscyIsInByb3ZpZGVyIiwibmV0d29ya05hbWUiLCJzaWduZXIiLCJjdXJyZW50QWNjb3VudCIsImNoYWluSWQiLCJ1c2VyQXNzZXRzIiwic2V0VXNlckFzc2V0cyIsInN1cHBseUFzc2V0cyIsInNldFN1cHBseUFzc2V0cyIsImFzc2V0c1RvQm9ycm93Iiwic2V0QXNzZXRzVG9Cb3Jyb3ciLCJ5b3VyQm9ycm93cyIsInNldFlvdXJCb3Jyb3dzIiwiY29udHJhY3QiLCJzZXRDb250cmFjdCIsImxlbmRpbmdQb29sQ29udHJhY3QiLCJvcmFjbGVDb250cmFjdCIsInN1cHBseVN1bW1hcnkiLCJzZXRTdXBwbHlTdW1tYXJ5IiwidG90YWxVU0RCYWxhbmNlIiwid2VpZ2h0ZWRBdmdBUFkiLCJ0b3RhbFVTRENvbGxhdGVyYWwiLCJib3Jyb3dTdW1tYXJ5Iiwic2V0Qm9ycm93U3VtbWFyeSIsInRvdGFsQm9ycm93UG93ZXJVc2VkIiwiYWNjb3VudERhdGEiLCJzZXRBY2NvdW50RGF0YSIsImNvbGxhdGVyYWxVU0QiLCJkZWJ0VVNEIiwiaGVhbHRoRmFjdG9yIiwiY29ubmVjdFdhbGxldCIsImxvZyIsImV0aGVyZXVtIiwid2luZG93IiwiZmFpbE1lc3NhZ2UiLCJhbGVydCIsImFjY291bnRzIiwicmVxdWVzdCIsIm1ldGhvZCIsIm9uIiwibG9jYXRpb24iLCJyZWxvYWQiLCJCcm93c2VyUHJvdmlkZXIiLCJuZXR3b3JrIiwiZ2V0TmV0d29yayIsIm5hbWUiLCJnZXRTaWduZXIiLCJsZW5ndGgiLCJjdXJyZW50QWRkcmVzcyIsIk51bWJlciIsImdldENvbnRyYWN0IiwiYWRkcmVzcyIsImFiaSIsIkNvbnRyYWN0IiwiZ2V0VXNlckFzc2V0cyIsImFzc2V0cyIsIlByb21pc2UiLCJhbGwiLCJUT0tFTlMiLCJtYXAiLCJ0b2tlbiIsImJhbGFuY2UiLCJiYWxhbmNlVVNEIiwiaXNOYXRpdmUiLCJiYWwiLCJnZXRCYWxhbmNlIiwiZm9ybWF0RXRoZXIiLCJkZWNpbWFscyIsInByaWNlIiwiZ2V0UHJpY2VVU0QiLCJwYXJzZUZsb2F0Iiwic3ltYm9sIiwicHJpY2VVU0QiLCJ3YXJuIiwiYXNzZXQiLCJvcmFjbGUiLCJQUklDRV9PUkFDTEUiLCJnZXRBc3NldFByaWNlMWUxOCIsImZvcm1hdFVuaXRzIiwiZ2V0QW1vdW50SW5VU0QiLCJhbW91bnQiLCJhbW91bnRJblVTRCIsIkFwcHJvdmVUb0NvbnRpbnVlIiwidG9rZW5BZGRyZXNzIiwiYXBwcm92ZUFtb3VudCIsIkVycm9yIiwiZmluZCIsInQiLCJ0b0xvd2VyQ2FzZSIsIkxFTkRJTkdfUE9PTCIsInN0YXR1cyIsIm1lc3NhZ2UiLCJyZWFzb24iLCJMZW5kQXNzZXQiLCJzdXBwbHlBbW91bnQiLCJ0b2tlbkluZm8iLCJwYXJzZVVuaXRzIiwidHgiLCJoYXNoIiwiV2l0aGRyYXdBc3NldCIsIndpdGhkcmF3QW1vdW50IiwiYm9ycm93QXNzZXQiLCJib3Jyb3dBbW91bnQiLCJyZXBheUFzc2V0IiwicmVwYXlBbW91bnQiLCJnZXRBY2NvdW50RGF0YSIsInVzZXIiLCJwb29sIiwid2FsbGV0IiwiWmVyb0FkZHJlc3MiLCJjb2wiLCJkZWJ0IiwiaGYiLCJjb250cmFjdEVycm9yIiwiZ2V0WW91clN1cHBsaWVzIiwic3VwcGxpZXMiLCJmaWx0ZXIiLCJ1c2VyUmVzZXJ2ZSIsImdldFVzZXJSZXNlcnZlIiwic3VwcGx5UHJpbmNpcGFsIiwic3VwcGx5IiwicHJpbmNpcGFsIiwic3VwcGx5SW5kZXgiLCJpbmRleCIsInZhbGlkU3VwcGxpZXMiLCJzIiwicmVkdWNlIiwic3VtIiwiYXB5IiwiZ2V0WW91ckJvcnJvd3MiLCJib3Jyb3dzIiwiYm9ycm93UHJpbmNpcGFsIiwiYm9ycm93SW5kZXgiLCJ2YWxpZEJvcnJvd3MiLCJiIiwiZ2V0QXNzZXRzVG9Cb3Jyb3ciLCJyZXNlcnZlIiwicmVzZXJ2ZXMiLCJpc0JvcnJvd2FibGUiLCJCb29sZWFuIiwicmVzZXJ2ZUNhc2giLCJsdHZCcHMiLCJsaXFUaHJlc2hvbGRCcHMiLCJ2YWxpZEFzc2V0cyIsImEiLCJ3cmFwRXRoIiwiYW1vdW50RXRoIiwiZGF0YSIsInNlbmRUcmFuc2FjdGlvbiIsInRvIiwidmFsdWUiLCJ3YWl0IiwidW53cmFwV2V0aCIsIndldGgiLCJ3aXRoZHJhd1Rva2VuIiwiZGVwb3NpdFRvVG9rZW4iLCJkZXBvc2l0IiwicmVmcmVzaCIsInVwZGF0ZUludGVyZXN0cyIsImFjY3J1ZVB1YmxpYyIsImdldFVzZXJUb3RhbEF2YWlsYWJsZUJhbGFuY2UiLCJtYXhBbW91bnQiLCJnZXRVc2VyVG90YWxBdmFpbGFibGVCYWxhbmNlSW5VU0QiLCJnZXRUb2tlbnNQZXJVU0RBbW91bnQiLCJoZWxwZXIiLCJtYXhRdHkiLCJvYmplY3RpZnlTdXBwbGllZEFzc2V0cyIsImFzc2V0c0xpc3QiLCJpIiwibGVuZFF0eSIsImxlbnRRdHkiLCJtYXhTdXBwbHlBbW91bnQiLCJxdHkiLCJwdXNoIiwibGVudEFweSIsImJhbGFuY2VJblVTRCIsIm1heFN1cHBseSIsIm9iamVjdGlmeUJvcnJvd2VkQXNzZXRzIiwiYm9ycm93c0xpc3QiLCJib3Jyb3dRdHkiLCJib3Jyb3dBcHkiLCJib3Jyb3dlZEJhbEluVVNEIiwibWVyZ2VPYmplY3RpZmllZEFzc2V0cyIsInJlc3VsdCIsInRva2VuTGlzdCIsInNvbWUiLCJhc3NldExpc3QiLCJhc3NldE9iaiIsIml0ZW0iLCJjb250ZXh0VmFsdWUiLCJQcm92aWRlciIsImNoaWxkcmVuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/context/LendState.js\n");

/***/ }),

/***/ "(pages-dir-node)/./src/context/lendContext.js":
/*!************************************!*\
  !*** ./src/context/lendContext.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst lendContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lendContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9jb250ZXh0L2xlbmRDb250ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUV0QyxNQUFNQyw0QkFBY0Qsb0RBQWFBO0FBRWpDLGlFQUFlQyxXQUFXQSxFQUFDIiwic291cmNlcyI6WyJEOlxcRG9fYW4yXFxsZW5kaHViX3YyXFxsZW5kaHViLWZyb250ZW5kLW5leHRqc1xcc3JjXFxjb250ZXh0XFxsZW5kQ29udGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5jb25zdCBsZW5kQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGxlbmRDb250ZXh0O1xyXG4iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsImxlbmRDb250ZXh0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/context/lendContext.js\n");

/***/ }),

/***/ "(pages-dir-node)/./src/lib/tx.ts":
/*!***********************!*\
  !*** ./src/lib/tx.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accruePublic: () => (/* binding */ accruePublic),\n/* harmony export */   approveIfNeeded: () => (/* binding */ approveIfNeeded),\n/* harmony export */   borrow: () => (/* binding */ borrow),\n/* harmony export */   formatTokenAmount: () => (/* binding */ formatTokenAmount),\n/* harmony export */   getTokenAllowance: () => (/* binding */ getTokenAllowance),\n/* harmony export */   getTokenBalance: () => (/* binding */ getTokenBalance),\n/* harmony export */   lend: () => (/* binding */ lend),\n/* harmony export */   liquidate: () => (/* binding */ liquidate),\n/* harmony export */   parseTokenAmount: () => (/* binding */ parseTokenAmount),\n/* harmony export */   repay: () => (/* binding */ repay),\n/* harmony export */   sendWithToast: () => (/* binding */ sendWithToast),\n/* harmony export */   withdraw: () => (/* binding */ withdraw)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var _config_abis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/abis */ \"(pages-dir-node)/./src/config/abis.ts\");\n/* harmony import */ var _config_contracts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/contracts */ \"(pages-dir-node)/./src/config/contracts.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([ethers__WEBPACK_IMPORTED_MODULE_0__]);\nethers__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// Transaction service with toast notifications\n\n\n\n\n/**\n * Send transaction with toast notifications\n */ async function sendWithToast(txPromise, config) {\n    try {\n        // Show pending toast\n        console.log('⏳', config.pending);\n        // Send transaction\n        const tx = await txPromise;\n        console.log('📤 Transaction sent:', tx.hash);\n        // Show pending with hash\n        console.log('⏳', `${config.pending} - Hash: ${tx.hash}`);\n        // Wait for confirmation\n        const receipt = await tx.wait();\n        console.log('✅', config.success);\n        console.log('📋 Receipt:', {\n            hash: tx.hash,\n            gasUsed: receipt?.gasUsed?.toString(),\n            status: receipt?.status\n        });\n        return {\n            hash: tx.hash,\n            receipt: receipt\n        };\n    } catch (error) {\n        console.error('❌', config.error);\n        console.error('Error details:', error);\n        throw error;\n    }\n}\n/**\n * Approve ERC20 token if needed\n */ async function approveIfNeeded(signer, tokenAddress, spender, amount) {\n    const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(tokenAddress, _config_abis__WEBPACK_IMPORTED_MODULE_1__.ERC20_ABI, signer);\n    const userAddress = await signer.getAddress();\n    // Check current allowance\n    const currentAllowance = await tokenContract.allowance(userAddress, spender);\n    if (currentAllowance >= amount) {\n        console.log('✅ Allowance sufficient, skipping approval');\n        return null;\n    }\n    console.log('📝 Approval needed:', {\n        current: currentAllowance.toString(),\n        required: amount.toString()\n    });\n    // Send approval transaction\n    const txPromise = tokenContract.approve(spender, amount);\n    return await sendWithToast(txPromise, {\n        pending: 'Approving token...',\n        success: 'Token approved successfully!',\n        error: 'Approval failed'\n    });\n}\n/**\n * Lend tokens to the pool\n */ async function lend(signer, tokenAddress, amount) {\n    const poolContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, _config_abis__WEBPACK_IMPORTED_MODULE_1__.POOL_ABI, signer);\n    // Approve if needed\n    await approveIfNeeded(signer, tokenAddress, _config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, amount);\n    // Send lend transaction\n    const txPromise = poolContract.lend(tokenAddress, amount);\n    return await sendWithToast(txPromise, {\n        pending: 'Supplying tokens...',\n        success: 'Tokens supplied successfully!',\n        error: 'Supply failed'\n    });\n}\n/**\n * Withdraw tokens from the pool\n */ async function withdraw(signer, tokenAddress, amount) {\n    const poolContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, _config_abis__WEBPACK_IMPORTED_MODULE_1__.POOL_ABI, signer);\n    const txPromise = poolContract.withdraw(tokenAddress, amount);\n    return await sendWithToast(txPromise, {\n        pending: 'Withdrawing tokens...',\n        success: 'Tokens withdrawn successfully!',\n        error: 'Withdraw failed'\n    });\n}\n/**\n * Borrow tokens from the pool\n */ async function borrow(signer, tokenAddress, amount) {\n    const poolContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, _config_abis__WEBPACK_IMPORTED_MODULE_1__.POOL_ABI, signer);\n    const txPromise = poolContract.borrow(tokenAddress, amount);\n    return await sendWithToast(txPromise, {\n        pending: 'Borrowing tokens...',\n        success: 'Tokens borrowed successfully!',\n        error: 'Borrow failed'\n    });\n}\n/**\n * Repay borrowed tokens\n */ async function repay(signer, tokenAddress, amount, userAddress) {\n    const poolContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, _config_abis__WEBPACK_IMPORTED_MODULE_1__.POOL_ABI, signer);\n    const borrower = userAddress || await signer.getAddress();\n    // Approve if needed\n    await approveIfNeeded(signer, tokenAddress, _config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, amount);\n    const txPromise = poolContract.repay(tokenAddress, amount, borrower);\n    return await sendWithToast(txPromise, {\n        pending: 'Repaying tokens...',\n        success: 'Tokens repaid successfully!',\n        error: 'Repay failed'\n    });\n}\n/**\n * Liquidate a position\n */ async function liquidate(signer, collateralAsset, debtAsset, debtAmount, userAddress) {\n    const poolContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, _config_abis__WEBPACK_IMPORTED_MODULE_1__.POOL_ABI, signer);\n    const txPromise = poolContract.liquidationCall(collateralAsset, debtAsset, debtAmount, userAddress);\n    return await sendWithToast(txPromise, {\n        pending: 'Liquidating position...',\n        success: 'Position liquidated successfully!',\n        error: 'Liquidation failed'\n    });\n}\n/**\n * Accrue interest for all reserves\n */ async function accruePublic(signer) {\n    const poolContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(_config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONFIG.LENDING_POOL, _config_abis__WEBPACK_IMPORTED_MODULE_1__.POOL_ABI, signer);\n    const txPromise = poolContract.accruePublic();\n    return await sendWithToast(txPromise, {\n        pending: 'Accruing interest...',\n        success: 'Interest accrued successfully!',\n        error: 'Accrue failed'\n    });\n}\n/**\n * Get user's token balance\n */ async function getTokenBalance(provider, tokenAddress, userAddress, decimals = 18) {\n    const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(tokenAddress, _config_abis__WEBPACK_IMPORTED_MODULE_1__.ERC20_ABI, provider);\n    const balance = await tokenContract.balanceOf(userAddress);\n    return (0,ethers__WEBPACK_IMPORTED_MODULE_0__.formatUnits)(balance, decimals);\n}\n/**\n * Get user's token allowance\n */ async function getTokenAllowance(provider, tokenAddress, userAddress, spender, decimals = 18) {\n    const tokenContract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(tokenAddress, _config_abis__WEBPACK_IMPORTED_MODULE_1__.ERC20_ABI, provider);\n    const allowance = await tokenContract.allowance(userAddress, spender);\n    return (0,ethers__WEBPACK_IMPORTED_MODULE_0__.formatUnits)(allowance, decimals);\n}\n/**\n * Parse token amount to BigInt\n */ function parseTokenAmount(amount, decimals) {\n    return (0,ethers__WEBPACK_IMPORTED_MODULE_0__.parseUnits)(amount, decimals);\n}\n/**\n * Format token amount from BigInt\n */ function formatTokenAmount(amount, decimals) {\n    return (0,ethers__WEBPACK_IMPORTED_MODULE_0__.formatUnits)(amount, decimals);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/lib/tx.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/styles/globals.css */ \"(pages-dir-node)/./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-toastify */ \"react-toastify\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"(pages-dir-node)/./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _context_LendState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/context/LendState */ \"(pages-dir-node)/./src/context/LendState.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_toastify__WEBPACK_IMPORTED_MODULE_2__, _context_LendState__WEBPACK_IMPORTED_MODULE_4__]);\n([react_toastify__WEBPACK_IMPORTED_MODULE_2__, _context_LendState__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nfunction App({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_LendState__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"viewport\",\n                content: \"width=device-width, initial-scale=1\"\n            }, void 0, false, {\n                fileName: \"D:\\\\Do_an2\\\\lendhub_v2\\\\lendhub-frontend-nextjs\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 11,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"D:\\\\Do_an2\\\\lendhub_v2\\\\lendhub-frontend-nextjs\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 12,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_toastify__WEBPACK_IMPORTED_MODULE_2__.ToastContainer, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                newestOnTop: false,\n                closeOnClick: true,\n                rtl: false,\n                pauseOnFocusLoss: true,\n                draggable: true,\n                pauseOnHover: true,\n                theme: \"dark\"\n            }, void 0, false, {\n                fileName: \"D:\\\\Do_an2\\\\lendhub_v2\\\\lendhub-frontend-nextjs\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Do_an2\\\\lendhub_v2\\\\lendhub-frontend-nextjs\\\\src\\\\pages\\\\_app.tsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3NyYy9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQTZCO0FBRWtCO0FBQ0Q7QUFDSDtBQUU1QixTQUFTRSxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQzVELHFCQUNFLDhEQUFDSCwwREFBU0E7OzBCQUVSLDhEQUFDSTtnQkFBS0MsTUFBSztnQkFBV0MsU0FBUTs7Ozs7OzBCQUM5Qiw4REFBQ0o7Z0JBQVcsR0FBR0MsU0FBUzs7Ozs7OzBCQUN4Qiw4REFBQ0osMERBQWNBO2dCQUNiUSxVQUFTO2dCQUNUQyxXQUFXO2dCQUNYQyxpQkFBaUI7Z0JBQ2pCQyxhQUFhO2dCQUNiQyxZQUFZO2dCQUNaQyxLQUFLO2dCQUNMQyxnQkFBZ0I7Z0JBQ2hCQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxPQUFNOzs7Ozs7Ozs7Ozs7QUFJZCIsInNvdXJjZXMiOlsiRDpcXERvX2FuMlxcbGVuZGh1Yl92MlxcbGVuZGh1Yi1mcm9udGVuZC1uZXh0anNcXHNyY1xccGFnZXNcXF9hcHAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQC9zdHlsZXMvZ2xvYmFscy5jc3MnXHJcbmltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCdcclxuaW1wb3J0IHsgVG9hc3RDb250YWluZXIgfSBmcm9tICdyZWFjdC10b2FzdGlmeSdcclxuaW1wb3J0ICdyZWFjdC10b2FzdGlmeS9kaXN0L1JlYWN0VG9hc3RpZnkuY3NzJ1xyXG5pbXBvcnQgTGVuZFN0YXRlIGZyb20gJ0AvY29udGV4dC9MZW5kU3RhdGUnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xyXG4gIHJldHVybiAoXHJcbiAgICA8TGVuZFN0YXRlPlxyXG4gICAgICB7LyogTmV4dC5qcyByZWNvbW1lbmRzIHZpZXdwb3J0IG1ldGEgaW4gX2FwcCAqL31cclxuICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xXCIgLz5cclxuICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxyXG4gICAgICA8VG9hc3RDb250YWluZXJcclxuICAgICAgICBwb3NpdGlvbj1cInRvcC1yaWdodFwiXHJcbiAgICAgICAgYXV0b0Nsb3NlPXs1MDAwfVxyXG4gICAgICAgIGhpZGVQcm9ncmVzc0Jhcj17ZmFsc2V9XHJcbiAgICAgICAgbmV3ZXN0T25Ub3A9e2ZhbHNlfVxyXG4gICAgICAgIGNsb3NlT25DbGlja1xyXG4gICAgICAgIHJ0bD17ZmFsc2V9XHJcbiAgICAgICAgcGF1c2VPbkZvY3VzTG9zc1xyXG4gICAgICAgIGRyYWdnYWJsZVxyXG4gICAgICAgIHBhdXNlT25Ib3ZlclxyXG4gICAgICAgIHRoZW1lPVwiZGFya1wiXHJcbiAgICAgIC8+XHJcbiAgICA8L0xlbmRTdGF0ZT5cclxuICApXHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiVG9hc3RDb250YWluZXIiLCJMZW5kU3RhdGUiLCJBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJtZXRhIiwibmFtZSIsImNvbnRlbnQiLCJwb3NpdGlvbiIsImF1dG9DbG9zZSIsImhpZGVQcm9ncmVzc0JhciIsIm5ld2VzdE9uVG9wIiwiY2xvc2VPbkNsaWNrIiwicnRsIiwicGF1c2VPbkZvY3VzTG9zcyIsImRyYWdnYWJsZSIsInBhdXNlT25Ib3ZlciIsInRoZW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/pages/_app.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (() => {



/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = import("ethers");;

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-toastify":
/*!*********************************!*\
  !*** external "react-toastify" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-toastify");;

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/react-toastify"], () => (__webpack_exec__("(pages-dir-node)/./src/pages/_app.tsx")));
module.exports = __webpack_exports__;

})();